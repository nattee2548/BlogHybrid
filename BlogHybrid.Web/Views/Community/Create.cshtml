@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "สร้างชุมชน";
    var maxCategories = Configuration.GetValue<int>("CommunitySettings:MaxCategoriesPerCommunity", 3);
}

<div class="create-community-container">
    <div class="create-community-content">
        <!-- Header -->
        <div class="create-header">
            <h1>สร้างชุมชน</h1>
            <button onclick="window.history.back()" class="btn-close-page">
                <i class="bi bi-x-lg"></i>
            </button>
        </div>

        <!-- Form -->
        <form method="post" class="create-community-form">
            @Html.AntiForgeryToken()

            <!-- Community Name -->
            <div class="form-section">
                <label class="form-label required">ชื่อชุมชน</label>
                <input type="text"
                       name="Name"
                       class="form-control"
                       placeholder="เช่น เทคโนโลยี AI, ชุมชนนักพัฒนา, เกมเมอร์ไทย"
                       maxlength="50"
                       required />
                <p class="form-help">
                    ชื่อชุมชนต้องมีความยาว 3-50 ตัวอักษร ไม่สามารถเปลี่ยนแปลงได้ในภายหลัง
                </p>
            </div>

            <!-- Category Selection (Modal Style) -->
            <div class="form-section">
                <label class="form-label required">หมวดหมู่ (เลือกได้สูงสุด @maxCategories หมวดหมู่)</label>
                <button type="button" class="category-selector-btn" onclick="openCategoryModal()">
                    <i class="bi bi-tag"></i>
                    <span id="selectedCategoryText">เลือกหมวดหมู่</span>
                    <i class="bi bi-chevron-down"></i>
                </button>
                <div id="selectedCategories" class="selected-categories"></div>
                <input type="hidden" name="CategoryIds" id="categoryIdsInput" required />
            </div>

            <!-- Community Image -->
            <div class="form-section">
                <label class="form-label">รูปภาพชุมชน <span class="optional-text">(ไม่บังคับ)</span></label>
                <input type="file"
                       name="ImageFile"
                       class="form-control"
                       accept="image/*"
                       id="imageFileInput" />
                <span class="text-danger"></span>
                <small class="form-help">รูปภาพ JPG, PNG, GIF หรือ WebP (สูงสุด 5MB)</small>

                <!-- Image Preview -->
                <div id="imagePreview" class="mt-3" style="display: none;">
                    <img id="previewImage" src="#" alt="Preview" class="img-thumbnail" style="max-height: 200px;" />
                    <button type="button" class="btn btn-sm btn-danger mt-2" onclick="removeImage()">
                        <i class="bi bi-trash"></i> ลบรูป
                    </button>
                </div>
            </div>

            <!-- Description -->
            <div class="form-section">
                <label class="form-label">คำอธิบาย <span class="optional-text">(ไม่บังคับ)</span></label>
                <textarea name="Description"
                          class="form-textarea"
                          placeholder="บอกเล่าเกี่ยวกับชุมชนของคุณ"
                          rows="4"
                          maxlength="500"></textarea>
                <p class="form-help">สูงสุด 500 ตัวอักษร</p>
            </div>

            <!-- Community Type -->
            <div class="form-section">
                <label class="form-label required">ประเภทชุมชน</label>

                <div class="radio-card">
                    <input type="radio" id="public" name="IsPrivate" value="false" checked />
                    <label for="public" class="radio-label">
                        <div class="radio-icon">
                            <i class="bi bi-person"></i>
                        </div>
                        <div class="radio-content">
                            <div class="radio-title">สาธารณะ</div>
                            <div class="radio-desc">ทุกคนสามารถดู โพสต์ และแสดงความคิดเห็นในชุมชนนี้ได้</div>
                        </div>
                    </label>
                </div>

                <div class="radio-card">
                    <input type="radio" id="restricted" name="IsPrivate" value="false" />
                    <label for="restricted" class="radio-label">
                        <div class="radio-icon">
                            <i class="bi bi-eye"></i>
                        </div>
                        <div class="radio-content">
                            <div class="radio-title">จำกัด</div>
                            <div class="radio-desc">ทุกคนสามารถดูชุมชนนี้ได้ แต่เฉพาะผู้ที่ได้รับอนุมัติเท่านั้นที่สามารถโพสต์ได้</div>
                        </div>
                    </label>
                </div>

                <div class="radio-card">
                    <input type="radio" id="private" name="IsPrivate" value="true" />
                    <label for="private" class="radio-label">
                        <div class="radio-icon">
                            <i class="bi bi-lock"></i>
                        </div>
                        <div class="radio-content">
                            <div class="radio-title">ส่วนตัว</div>
                            <div class="radio-desc">เฉพาะผู้ที่ได้รับอนุมัติเท่านั้นที่สามารถดูและส่งโพสต์ในชุมชนนี้</div>
                        </div>
                    </label>
                </div>
            </div>

            <!-- Adult Content -->
            <div class="form-section">
                <div class="checkbox-card">
                    <input type="checkbox" id="nsfw" name="IsNSFW" />
                    <label for="nsfw" class="checkbox-label">
                        <div class="checkbox-icon">
                            <i class="bi bi-18-square"></i>
                        </div>
                        <div class="checkbox-content">
                            <div class="checkbox-title">เนื้อหาสำหรับผู้ใหญ่ 18+</div>
                            <div class="checkbox-desc">ชุมชนนี้มีเนื้อหาที่ไม่เหมาะสมกับเด็กและเยาวชน</div>
                        </div>
                    </label>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="form-actions">
                <button type="button" onclick="window.history.back()" class="btn-cancel">
                    ยกเลิก
                </button>
                <button type="submit" class="btn-create">
                    สร้างชุมชน
                </button>
            </div>
        </form>
    </div>

    <!-- Sidebar Rules -->
    <div class="create-community-sidebar">
        <div class="sidebar-card">
            <h3 class="sidebar-title">โปรดทราบ</h3>
            <ul class="sidebar-rules">
                <li>ชื่อชุมชนไม่สามารถเปลี่ยนแปลงได้</li>
                <li>หลีกเลี่ยงการใช้ชื่อที่อาจทำให้ผู้อื่นเข้าใจผิด</li>
                <li>ชุมชนส่วนตัวต้องมีสมาชิกอย่างน้อย 1 คนก่อนจึงจะแสดงในรายการค้นหา</li>
                <li>คุณจะกลายเป็นผู้ดูแลชุมชนนี้โดยอัตโนมัติ</li>
            </ul>
        </div>

        <div class="sidebar-card">
            <h3 class="sidebar-title">กฎชุมชน</h3>
            <p class="sidebar-text">
                แนะนำให้สร้างกฎสำหรับชุมชนของคุณหลังจากสร้างเสร็จ เพื่อให้สมาชิกทราบถึงพฤติกรรมที่ยอมรับได้
            </p>
        </div>
    </div>
</div>

<!-- Category Selection Modal -->
<div class="category-modal" id="categoryModal">
    <div class="category-modal-overlay" onclick="closeCategoryModal()"></div>
    <div class="category-modal-content">
        <div class="category-modal-header">
            <h3>เลือกหมวดหมู่</h3>
            <button type="button" class="category-modal-close" onclick="closeCategoryModal()">
                <i class="bi bi-x-lg"></i>
            </button>
        </div>
        <div class="category-modal-body">
            <p class="category-modal-desc">เลือกได้สูงสุด @maxCategories หมวดหมู่ที่เหมาะสมกับชุมชนของคุณ</p>
            <div class="category-grid" id="categoryGrid">
                <!-- Categories will be loaded here -->
            </div>
        </div>
        <div class="category-modal-footer">
            <button type="button" class="btn-modal-cancel" onclick="closeCategoryModal()">ยกเลิก</button>
            <button type="button" class="btn-modal-done" onclick="confirmCategories()">เสร็จสิ้น</button>
        </div>
    </div>
</div>

<script>
    const MAX_CATEGORIES = @maxCategories; // อ่านจาก appsettings
    let selectedCategories = [];

    // Sample categories - จะโหลดจาก controller จริงๆ
    const categories = [
        { id: 1, name: 'เทคโนโลยี', icon: 'bi-cpu' },
        { id: 2, name: 'กีฬา', icon: 'bi-trophy' },
        { id: 3, name: 'เกม', icon: 'bi-controller' },
        { id: 4, name: 'ความบันเทิง', icon: 'bi-film' },
        { id: 5, name: 'อาหาร', icon: 'bi-cup-hot' },
        { id: 6, name: 'ท่องเที่ยว', icon: 'bi-airplane' },
        { id: 7, name: 'การศึกษา', icon: 'bi-book' },
        { id: 8, name: 'ธุรกิจ', icon: 'bi-briefcase' },
    ];

    // Load categories into modal
    function loadCategories() {
        const grid = document.getElementById('categoryGrid');
        grid.innerHTML = categories.map(cat => `
            <div class="category-item" data-id="${cat.id}" onclick="toggleCategory(${cat.id})">
                <i class="bi ${cat.icon}"></i>
                <span>${cat.name}</span>
                <i class="bi bi-check-circle category-check"></i>
            </div>
        `).join('');
    }

    // Open modal
    function openCategoryModal() {
        loadCategories();
        updateModalUI();
        document.getElementById('categoryModal').classList.add('active');
        document.body.style.overflow = 'hidden';
    }

    // Close modal
    function closeCategoryModal() {
        document.getElementById('categoryModal').classList.remove('active');
        document.body.style.overflow = '';
    }

    // Toggle category selection
    function toggleCategory(id) {
        const index = selectedCategories.indexOf(id);

        if (index > -1) {
            // Remove
            selectedCategories.splice(index, 1);
        } else {
            // Add
            if (selectedCategories.length >= MAX_CATEGORIES) {
                showToast(`เลือกได้สูงสุด ${MAX_CATEGORIES} หมวดหมู่เท่านั้น`, 'error');
                return;
            }
            selectedCategories.push(id);
        }

        updateModalUI();
    }

    // Update modal UI
    function updateModalUI() {
        document.querySelectorAll('.category-item').forEach(item => {
            const id = parseInt(item.dataset.id);
            if (selectedCategories.includes(id)) {
                item.classList.add('selected');
            } else {
                item.classList.remove('selected');
            }
        });
    }

    // Confirm selection
    function confirmCategories() {
        if (selectedCategories.length === 0) {
            showToast('กรุณาเลือกหมวดหมู่อย่างน้อย 1 หมวดหมู่', 'error');
            return;
        }

        updateSelectedDisplay();
        closeCategoryModal();
    }

    // Update selected display
    function updateSelectedDisplay() {
        const container = document.getElementById('selectedCategories');
        const input = document.getElementById('categoryIdsInput');
        const text = document.getElementById('selectedCategoryText');

        if (selectedCategories.length === 0) {
            container.innerHTML = '';
            input.value = '';
            text.textContent = 'เลือกหมวดหมู่';
            return;
        }

        // Update hidden input
        input.value = selectedCategories.join(',');
        text.textContent = `เลือกแล้ว ${selectedCategories.length} หมวดหมู่`;

        // Update display tags
        container.innerHTML = selectedCategories.map(id => {
            const cat = categories.find(c => c.id === id);
            return `
                <div class="category-tag">
                    <i class="bi ${cat.icon}"></i>
                    <span>${cat.name}</span>
                    <button type="button" onclick="removeCategory(${id})" class="category-tag-remove">
                        <i class="bi bi-x"></i>
                    </button>
                </div>
            `;
        }).join('');
    }

    // Remove category
    function removeCategory(id) {
        selectedCategories = selectedCategories.filter(cid => cid !== id);
        updateSelectedDisplay();
    }

    // Image preview (same as before)
    const imageFileInput = document.getElementById('imageFileInput');
    if (imageFileInput) {
        imageFileInput.addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                // Validate file size (5MB)
                if (file.size > 5 * 1024 * 1024) {
                    showToast('ไฟล์ใหญ่เกินไป (สูงสุด 5MB)', 'error');
                    this.value = '';
                    return;
                }

                // Validate file type
                const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];
                if (!validTypes.includes(file.type)) {
                    showToast('ประเภทไฟล์ไม่ถูกต้อง (รองรับเฉพาะ JPG, PNG, GIF, WebP)', 'error');
                    this.value = '';
                    return;
                }

                // Show preview
                const reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('previewImage').src = e.target.result;
                    document.getElementById('imagePreview').style.display = 'block';
                };
                reader.readAsDataURL(file);
            }
        });
    }

    function removeImage() {
        document.getElementById('imageFileInput').value = '';
        document.getElementById('imagePreview').style.display = 'none';
    }
</script>

<style>
    /* Container */
    .create-community-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 1rem;
        display: grid;
        grid-template-columns: 1fr 300px;
        gap: 2rem;
    }

    /* Header */
    .create-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 2rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid var(--border-primary, #e5e7eb);
    }

        .create-header h1 {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--text-primary, #1a1a1a);
            margin: 0;
        }

    .btn-close-page {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: transparent;
        border: none;
        border-radius: 8px;
        color: var(--text-secondary, #666);
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .btn-close-page:hover {
            background: var(--bg-hover, #f3f4f6);
            color: var(--text-primary, #1a1a1a);
        }

    /* Form */
    .create-community-form {
        background: var(--card-bg, #ffffff);
        border: 1px solid var(--border-primary, #e5e7eb);
        border-radius: 12px;
        padding: 2rem;
    }

    [data-theme="dark"] .create-community-form {
        background: var(--card-bg, #1f2937);
        border-color: var(--border-primary, #374151);
    }

    .form-section {
        margin-bottom: 2rem;
    }

    .form-label {
        display: block;
        font-size: 0.875rem;
        font-weight: 600;
        color: var(--text-primary, #1a1a1a);
        margin-bottom: 0.5rem;
    }

        .form-label.required::after {
            content: '*';
            color: #ef4444;
            margin-left: 4px;
        }

    .optional-text {
        font-weight: 400;
        color: var(--text-secondary, #666);
    }

    .form-help {
        font-size: 0.75rem;
        color: var(--text-secondary, #666);
        margin-top: 0.5rem;
        margin-bottom: 0;
    }

    /* Category Selector Button */
    .category-selector-btn {
        width: 100%;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 0.75rem 1rem;
        border: 1px solid var(--border-primary, #e5e7eb);
        border-radius: 8px;
        background: var(--bg-primary, #ffffff);
        color: var(--text-primary, #1a1a1a);
        font-size: 0.875rem;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .category-selector-btn:hover {
            border-color: var(--primary, #ff4500);
            background: rgba(255, 69, 0, 0.05);
        }

        .category-selector-btn i:first-child {
            font-size: 1.1rem;
        }

        .category-selector-btn span {
            flex: 1;
            text-align: left;
        }

        .category-selector-btn i:last-child {
            font-size: 0.875rem;
        }

    /* Selected Categories Tags */
    .selected-categories {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-top: 0.75rem;
    }

    .category-tag {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 0.75rem;
        background: var(--primary, #ff4500);
        color: white;
        border-radius: 9999px;
        font-size: 0.8125rem;
        font-weight: 500;
    }

    .category-tag-remove {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 18px;
        height: 18px;
        background: rgba(255, 255, 255, 0.2);
        border: none;
        border-radius: 50%;
        color: white;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .category-tag-remove:hover {
            background: rgba(255, 255, 255, 0.3);
        }

    /* Category Modal */
    .category-modal {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 10000;
        display: none;
        align-items: center;
        justify-content: center;
        padding: 1rem;
    }

        .category-modal.active {
            display: flex;
        }

    .category-modal-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.6);
        backdrop-filter: blur(4px);
    }

    .category-modal-content {
        position: relative;
        width: 100%;
        max-width: 600px;
        background: var(--card-bg, #ffffff);
        border-radius: 16px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        max-height: 80vh;
        display: flex;
        flex-direction: column;
    }

    [data-theme="dark"] .category-modal-content {
        background: var(--card-bg, #1f2937);
    }

    .category-modal-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 1.5rem;
        border-bottom: 1px solid var(--border-primary, #e5e7eb);
    }

        .category-modal-header h3 {
            font-size: 1.125rem;
            font-weight: 700;
            color: var(--text-primary, #1a1a1a);
            margin: 0;
        }

    .category-modal-close {
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: transparent;
        border: none;
        border-radius: 8px;
        color: var(--text-secondary, #666);
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .category-modal-close:hover {
            background: var(--bg-hover, #f3f4f6);
        }

    .category-modal-body {
        padding: 1.5rem;
        overflow-y: auto;
    }

    .category-modal-desc {
        font-size: 0.875rem;
        color: var(--text-secondary, #666);
        margin: 0 0 1.5rem 0;
    }

    .category-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
        gap: 0.75rem;
    }

    .category-item {
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 0.5rem;
        padding: 1rem;
        border: 2px solid var(--border-primary, #e5e7eb);
        border-radius: 12px;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .category-item:hover {
            border-color: var(--primary, #ff4500);
            background: rgba(255, 69, 0, 0.05);
        }

        .category-item.selected {
            border-color: var(--primary, #ff4500);
            background: rgba(255, 69, 0, 0.1);
        }

        .category-item > i:first-child {
            font-size: 1.75rem;
            color: var(--text-secondary, #666);
        }

        .category-item.selected > i:first-child {
            color: var(--primary, #ff4500);
        }

        .category-item > span {
            font-size: 0.875rem;
            font-weight: 500;
            color: var(--text-primary, #1a1a1a);
            text-align: center;
        }

    .category-check {
        position: absolute;
        top: 0.5rem;
        right: 0.5rem;
        font-size: 1.25rem;
        color: var(--primary, #ff4500);
        opacity: 0;
        transition: opacity 0.2s ease;
    }

    .category-item.selected .category-check {
        opacity: 1;
    }

    .category-modal-footer {
        display: flex;
        justify-content: flex-end;
        gap: 0.75rem;
        padding: 1.5rem;
        border-top: 1px solid var(--border-primary, #e5e7eb);
    }

    .btn-modal-cancel {
        padding: 0.75rem 1.5rem;
        background: transparent;
        border: 1px solid var(--border-primary, #e5e7eb);
        border-radius: 9999px;
        font-size: 0.875rem;
        font-weight: 600;
        color: var(--text-primary, #1a1a1a);
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .btn-modal-cancel:hover {
            background: var(--bg-hover, #f3f4f6);
        }

    .btn-modal-done {
        padding: 0.75rem 1.5rem;
        background: var(--primary, #ff4500);
        border: none;
        border-radius: 9999px;
        font-size: 0.875rem;
        font-weight: 600;
        color: white;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .btn-modal-done:hover {
            background: var(--primary-hover, #e03d00);
            transform: translateY(-1px);
        }

    /* Remove old select styles */
    .form-select[multiple],
    .form-select[multiple] option {
        display: none !important;
    }

    flex: 1;
    padding: 0.75rem 1rem;
    border: none;
    background: transparent;
    font-size: 0.875rem;
    color: var(--text-primary, #1a1a1a);
    }

    .form-input:focus {
        outline: none;
    }

    /* Textarea */
    .form-textarea {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 1px solid var(--border-primary, #e5e7eb);
        border-radius: 8px;
        font-size: 0.875rem;
        color: var(--text-primary, #1a1a1a);
        background: var(--bg-primary, #ffffff);
        resize: vertical;
        transition: all 0.2s ease;
    }

        .form-textarea:focus {
            outline: none;
            border-color: var(--primary, #ff4500);
            box-shadow: 0 0 0 3px rgba(255, 69, 0, 0.1);
        }

    [data-theme="dark"] .form-textarea {
        background: var(--bg-primary, #111827);
        border-color: var(--border-primary, #374151);
    }

    /* Radio Cards */
    .radio-card {
        margin-bottom: 0.75rem;
    }

        .radio-card input[type="radio"] {
            position: absolute;
            opacity: 0;
        }

    .radio-label {
        display: flex;
        align-items: flex-start;
        gap: 1rem;
        padding: 1rem;
        border: 2px solid var(--border-primary, #e5e7eb);
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .radio-label:hover {
            border-color: var(--border-hover, #d1d5db);
            background: var(--bg-hover, #f9fafb);
        }

    .radio-card input[type="radio"]:checked + .radio-label {
        border-color: var(--primary, #ff4500);
        background: rgba(255, 69, 0, 0.05);
    }

    [data-theme="dark"] .radio-label {
        border-color: var(--border-primary, #374151);
    }

        [data-theme="dark"] .radio-label:hover {
            background: var(--bg-hover, #1f2937);
        }

    .radio-icon {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: var(--bg-secondary, #f3f4f6);
        border-radius: 8px;
        font-size: 1.25rem;
        color: var(--text-secondary, #666);
    }

    .radio-card input[type="radio"]:checked + .radio-label .radio-icon {
        background: var(--primary, #ff4500);
        color: white;
    }

    .radio-content {
        flex: 1;
    }

    .radio-title {
        font-size: 0.875rem;
        font-weight: 600;
        color: var(--text-primary, #1a1a1a);
        margin-bottom: 0.25rem;
    }

    .radio-desc {
        font-size: 0.75rem;
        color: var(--text-secondary, #666);
        line-height: 1.4;
    }

    /* Checkbox Card */
    .checkbox-card input[type="checkbox"] {
        position: absolute;
        opacity: 0;
    }

    .checkbox-label {
        display: flex;
        align-items: flex-start;
        gap: 1rem;
        padding: 1rem;
        border: 2px solid var(--border-primary, #e5e7eb);
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .checkbox-label:hover {
            border-color: var(--border-hover, #d1d5db);
            background: var(--bg-hover, #f9fafb);
        }

    .checkbox-card input[type="checkbox"]:checked + .checkbox-label {
        border-color: var(--primary, #ff4500);
        background: rgba(255, 69, 0, 0.05);
    }

    .checkbox-icon {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: var(--bg-secondary, #f3f4f6);
        border-radius: 8px;
        font-size: 1.25rem;
        color: var(--text-secondary, #666);
    }

    .checkbox-card input[type="checkbox"]:checked + .checkbox-label .checkbox-icon {
        background: var(--primary, #ff4500);
        color: white;
    }

    .checkbox-content {
        flex: 1;
    }

    .checkbox-title {
        font-size: 0.875rem;
        font-weight: 600;
        color: var(--text-primary, #1a1a1a);
        margin-bottom: 0.25rem;
    }

    .checkbox-desc {
        font-size: 0.75rem;
        color: var(--text-secondary, #666);
    }

    /* Action Buttons */
    .form-actions {
        display: flex;
        justify-content: flex-end;
        gap: 0.75rem;
        padding-top: 1.5rem;
        border-top: 1px solid var(--border-primary, #e5e7eb);
    }

    .btn-cancel {
        padding: 0.75rem 1.5rem;
        background: transparent;
        border: 1px solid var(--border-primary, #e5e7eb);
        border-radius: 9999px;
        font-size: 0.875rem;
        font-weight: 600;
        color: var(--text-primary, #1a1a1a);
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .btn-cancel:hover {
            background: var(--bg-hover, #f3f4f6);
        }

    .btn-create {
        padding: 0.75rem 1.5rem;
        background: var(--primary, #ff4500);
        border: none;
        border-radius: 9999px;
        font-size: 0.875rem;
        font-weight: 600;
        color: white;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .btn-create:hover {
            background: var(--primary-hover, #e03d00);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(255, 69, 0, 0.3);
        }

    /* Sidebar */
    .create-community-sidebar {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .sidebar-card {
        background: var(--card-bg, #ffffff);
        border: 1px solid var(--border-primary, #e5e7eb);
        border-radius: 12px;
        padding: 1.5rem;
    }

    [data-theme="dark"] .sidebar-card {
        background: var(--card-bg, #1f2937);
        border-color: var(--border-primary, #374151);
    }

    .sidebar-title {
        font-size: 0.75rem;
        font-weight: 700;
        color: var(--text-secondary, #666);
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin: 0 0 1rem 0;
    }

    .sidebar-rules {
        list-style: none;
        padding: 0;
        margin: 0;
    }

        .sidebar-rules li {
            font-size: 0.8125rem;
            color: var(--text-primary, #1a1a1a);
            padding-left: 1.25rem;
            margin-bottom: 0.75rem;
            position: relative;
            line-height: 1.5;
        }

            .sidebar-rules li::before {
                content: '•';
                position: absolute;
                left: 0;
                color: var(--primary, #ff4500);
                font-weight: bold;
            }

            .sidebar-rules li:last-child {
                margin-bottom: 0;
            }

    .sidebar-text {
        font-size: 0.8125rem;
        color: var(--text-primary, #1a1a1a);
        line-height: 1.5;
        margin: 0;
    }

    /* Responsive */
    @@media (max-width: 991px) {
        .create-community-container

    {
        grid-template-columns: 1fr;
    }

    .create-community-sidebar {
        order: -1;
    }

    }

    @@media (max-width: 767px) {
        .create-community-container

    {
        padding: 1rem;
    }

    .create-community-form {
        padding: 1.5rem;
    }

    .form-actions {
        flex-direction: column-reverse;
    }

    .btn-cancel,
    .btn-create {
        width: 100%;
    }

    }
</style>