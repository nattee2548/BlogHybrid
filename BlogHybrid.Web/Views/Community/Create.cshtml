@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "สร้างชุมชน";
    var maxCategories = Configuration.GetValue<int>("CommunitySettings:MaxCategoriesPerCommunity", 3);
}
@if (ViewBag.ErrorMessage != null)
{
    <div class="toast-notification toast-error" id="errorToast" style="display: none;">
        <i class="bi bi-exclamation-triangle-fill"></i>
        <span>@ViewBag.ErrorMessage</span>
    </div>
}

<div class="create-community-container">
    <div class="create-community-content">
        <!-- Header -->
        <div class="create-header">
            <h1>สร้างชุมชน</h1>
            <button onclick="window.history.back()" class="btn-close-page">
                <i class="bi bi-x-lg"></i>
            </button>
        </div>

        <!-- Form -->
        <form method="post" enctype="multipart/form-data" class="create-community-form">
            @Html.AntiForgeryToken()

            <!-- Community Name -->
            <div class="form-section">
                <label class="form-label required">ชื่อชุมชน</label>
                <input type="text"
                       name="Name"
                       id="Name"
                       class="form-control"
                       placeholder="เช่น เทคโนโลยี AI, ชุมชนนักพัฒนา, เกมเมอร์ไทย"
                       maxlength="50"
                       value="@Model?.Name"
                       required />
                @if (ViewData.ModelState["Name"]?.Errors.Count > 0)
                {
                    <span class="text-danger field-validation-error" data-valmsg-for="Name">
                        @ViewData.ModelState["Name"].Errors[0].ErrorMessage
                    </span>
                }
                <p class="form-help">
                    ชื่อชุมชนต้องมีความยาว 3-50 ตัวอักษร ไม่สามารถเปลี่ยนแปลงได้ในภายหลัง
                </p>
            </div>

            <!-- Category Selection (Modal Style) -->
            <div class="form-section">
                <label class="form-label required">หมวดหมู่ (เลือกได้สูงสุด @maxCategories หมวดหมู่)</label>
                <button type="button" class="category-selector-btn" onclick="openCategoryModal()">
                    <i class="bi bi-tag"></i>
                    <span id="selectedCategoryText">เลือกหมวดหมู่</span>
                    <i class="bi bi-chevron-down"></i>
                </button>
                <div id="selectedCategories" class="selected-categories"></div>
                <input type="hidden" name="CategoryIds" id="categoryIdsInput" required />
                @if (ViewData.ModelState["CategoryIds"]?.Errors.Count > 0)
                {
                    <span class="text-danger field-validation-error" data-valmsg-for="CategoryIds">
                        @ViewData.ModelState["CategoryIds"].Errors[0].ErrorMessage
                    </span>
                }
            </div>

            <!-- Community Profile Image -->
            <div class="form-section">
                <label class="form-label">รูปโปรไฟล์ชุมชน <span class="optional-text">(ไม่บังคับ)</span></label>

                <!-- Custom Upload Button -->
                <div class="custom-file-upload">
                    <input type="file"
                           name="ImageFile"
                           class="file-input-hidden"
                           accept="image/*"
                           id="imageFileInput" />

                    <label for="imageFileInput" class="file-upload-label">
                        <div class="file-upload-icon">
                            <i class="bi bi-cloud-upload"></i>
                        </div>
                        <div class="file-upload-text">
                            <span class="upload-title">คลิกเพื่ออัปโหลดรูปภาพ</span>
                            <span class="upload-subtitle">หรือลากไฟล์มาวางที่นี่</span>
                        </div>
                    </label>
                </div>

                @if (ViewData.ModelState["ImageFile"]?.Errors.Count > 0)
                {
                    <span class="text-danger field-validation-error" data-valmsg-for="ImageFile">
                        @ViewData.ModelState["ImageFile"].Errors[0].ErrorMessage
                    </span>
                }
                <small class="form-help">รูปภาพแสดงเป็นไอคอนชุมชน | JPG, PNG, GIF, WebP (สูงสุด 5MB)</small>

                <!-- Profile Image Preview -->
                <div id="imagePreview" class="image-preview-box" style="display: none;">
                    <div class="preview-header">
                        <span class="preview-label">
                            <i class="bi bi-image"></i> ตัวอย่างรูปโปรไฟล์
                        </span>
                    </div>
                    <img id="previewImage" src="#" alt="Profile Preview" />
                    <button type="button" class="btn-remove-image" onclick="removeImage()">
                        <i class="bi bi-trash"></i> ลบรูป
                    </button>
                </div>
            </div>

            <!-- Community Cover Image -->
            <div class="form-section">
                <label class="form-label">รูปภาพปก <span class="optional-text">(ไม่บังคับ)</span></label>

                <!-- Custom Upload Button -->
                <div class="custom-file-upload">
                    <input type="file"
                           name="CoverImageFile"
                           class="file-input-hidden"
                           accept="image/*"
                           id="coverImageFileInput" />

                    <label for="coverImageFileInput" class="file-upload-label">
                        <div class="file-upload-icon">
                            <i class="bi bi-card-image"></i>
                        </div>
                        <div class="file-upload-text">
                            <span class="upload-title">คลิกเพื่ออัปโหลดรูปปก</span>
                            <span class="upload-subtitle">หรือลากไฟล์มาวางที่นี่</span>
                        </div>
                    </label>
                </div>

                @if (ViewData.ModelState["CoverImageFile"]?.Errors.Count > 0)
                {
                    <span class="text-danger field-validation-error" data-valmsg-for="CoverImageFile">
                        @ViewData.ModelState["CoverImageFile"].Errors[0].ErrorMessage
                    </span>
                }
                <small class="form-help">รูปภาพแสดงที่ด้านบนของชุมชน | JPG, PNG, GIF, WebP (สูงสุด 5MB)</small>

                <!-- Cover Image Preview -->
                <div id="coverImagePreview" class="image-preview-box cover-preview" style="display: none;">
                    <div class="preview-header">
                        <span class="preview-label">
                            <i class="bi bi-card-image"></i> ตัวอย่างรูปปก
                        </span>
                    </div>
                    <img id="previewCoverImage" src="#" alt="Cover Preview" />
                    <button type="button" class="btn-remove-image" onclick="removeCoverImage()">
                        <i class="bi bi-trash"></i> ลบรูป
                    </button>
                </div>
            </div>

            <!-- Description -->
            <div class="form-section">
                <label class="form-label">คำอธิบาย <span class="optional-text">(ไม่บังคับ)</span></label>
                <textarea name="Description"
                          class="form-textarea"
                          placeholder="บอกเล่าเกี่ยวกับชุมชนของคุณ"
                          rows="4"
                          maxlength="500">@Model?.Description</textarea>
                @if (ViewData.ModelState["Description"]?.Errors.Count > 0)
                {
                    <span class="text-danger field-validation-error" data-valmsg-for="Description">
                        @ViewData.ModelState["Description"].Errors[0].ErrorMessage
                    </span>
                }
                <p class="form-help">สูงสุด 500 ตัวอักษร</p>
            </div>

            <!-- Community Type -->
            <div class="form-section">
                <label class="form-label required">ประเภทชุมชน</label>

                <div class="radio-card">
                    <input type="radio"
                           id="public"
                           name="CommunityType"
                           value="public"
                           checked />
                    <label for="public" class="radio-label">
                        <div class="radio-icon">
                            <i class="bi bi-person"></i>
                        </div>
                        <div class="radio-content">
                            <div class="radio-title">สาธารณะ</div>
                            <div class="radio-desc">ทุกคนสามารถดู โพสต์ และแสดงความคิดเห็นในชุมชนนี้ได้</div>
                        </div>
                    </label>
                </div>

                <div class="radio-card">
                    <input type="radio"
                           id="restricted"
                           name="CommunityType"
                           value="restricted" />
                    <label for="restricted" class="radio-label">
                        <div class="radio-icon">
                            <i class="bi bi-eye"></i>
                        </div>
                        <div class="radio-content">
                            <div class="radio-title">จำกัด</div>
                            <div class="radio-desc">ทุกคนสามารถดูชุมชนนี้ได้ แต่เฉพาะผู้ที่ได้รับอนุมัติเท่านั้นที่สามารถโพสต์ได้</div>
                        </div>
                    </label>
                </div>

                <div class="radio-card">
                    <input type="radio"
                           id="private"
                           name="CommunityType"
                           value="private" />
                    <label for="private" class="radio-label">
                        <div class="radio-icon">
                            <i class="bi bi-lock"></i>
                        </div>
                        <div class="radio-content">
                            <div class="radio-title">ส่วนตัว</div>
                            <div class="radio-desc">เฉพาะผู้ที่ได้รับอนุมัติเท่านั้นที่สามารถดูและส่งโพสต์ในชุมชนนี้</div>
                        </div>
                    </label>
                </div>
            </div>
         
            <!-- Adult Content -->
            <div class="form-section">
                <div class="checkbox-card">
                   
                    <input type="checkbox"
                           id="nsfw"
                           name="IsNSFW"
                           value="true"
                           @(Model?.IsNSFW == true ? "checked" : "") />

                    <label for="nsfw" class="checkbox-label">
                        <div class="checkbox-icon">
                            <i class="bi bi-18-square"></i>
                        </div>
                        <div class="checkbox-content">
                            <div class="checkbox-title">เนื้อหาสำหรับผู้ใหญ่ 18+</div>
                            <div class="checkbox-desc">ชุมชนนี้มีเนื้อหาที่ไม่เหมาะสมกับเด็กและเยาวชน</div>
                        </div>
                    </label>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="form-actions">
                <button type="button" onclick="window.history.back()" class="btn-cancel">
                    ยกเลิก
                </button>
                <button type="submit" class="btn-create">
                    สร้างชุมชน
                </button>
            </div>
            <input type="hidden" name="IsPrivate" id="hiddenIsPrivate" value="false" />
            <input type="hidden" name="RequireApproval" id="hiddenRequireApproval" value="false" />
        </form>
    </div>

    <!-- Sidebar Rules -->
    <div class="create-community-sidebar">
        <div class="sidebar-card">
            <h3 class="sidebar-title">โปรดทราบ</h3>
            <ul class="sidebar-rules">
                <li>ชื่อชุมชนไม่สามารถเปลี่ยนแปลงได้</li>
                <li>หลีกเลี่ยงการใช้ชื่อที่อาจทำให้ผู้อื่นเข้าใจผิด</li>
                <li>ชุมชนส่วนตัวต้องมีสมาชิกอย่างน้อย 1 คนก่อนจึงจะแสดงในรายการค้นหา</li>
                <li>คุณจะกลายเป็นผู้ดูแลชุมชนนี้โดยอัตโนมัติ</li>
            </ul>
        </div>

        <div class="sidebar-card">
            <h3 class="sidebar-title">กฎชุมชน</h3>
            <p class="sidebar-text">
                แนะนำให้สร้างกฎสำหรับชุมชนของคุณหลังจากสร้างเสร็จ เพื่อให้สมาชิกทราบถึงพฤติกรรมที่ยอมรับได้
            </p>
        </div>
    </div>
</div>

<!-- Category Selection Modal -->
<div class="category-modal" id="categoryModal">
    <div class="category-modal-overlay" onclick="closeCategoryModal()"></div>
    <div class="category-modal-content">
        <div class="category-modal-header">
            <h3>เลือกหมวดหมู่</h3>
            <button type="button" class="category-modal-close" onclick="closeCategoryModal()">
                <i class="bi bi-x-lg"></i>
            </button>
        </div>
        <div class="category-modal-body">
            <p class="category-modal-desc">เลือกได้สูงสุด @maxCategories หมวดหมู่ที่เหมาะสมกับชุมชนของคุณ</p>

            <!-- Search Box -->
            <div class="category-search">
                <i class="bi bi-search category-search-icon"></i>
                <input type="text"
                       id="categorySearchInput"
                       class="category-search-input"
                       placeholder="ค้นหาหมวดหมู่..."
                       oninput="searchCategories(this.value)"
                       autocomplete="off" />
                <button type="button"
                        class="category-search-clear"
                        onclick="clearCategorySearch()"
                        title="ล้างการค้นหา">
                    <i class="bi bi-x"></i>
                </button>
            </div>

            <!-- Categories Grid -->
            <div class="category-grid" id="categoryGrid">
                <!-- Categories will be loaded here -->
            </div>
        </div>
        <div class="category-modal-footer">
            <button type="button" class="btn-modal-cancel" onclick="closeCategoryModal()">ยกเลิก</button>
            <button type="button" class="btn-modal-done" onclick="confirmCategories()">เสร็จสิ้น</button>
        </div>
    </div>
</div>

<script>
    // ========================================
    // Configuration
    // ========================================
    const MAX_CATEGORIES = @maxCategories;
    let selectedCategories = [];
    let allCategoriesData = [];

    // Load categories from server
    const categoryTree = @Html.Raw(Json.Serialize(ViewBag.Categories ?? new List<object>()));

    // ========================================
    // Modal Functions
    // ========================================
    function openCategoryModal() {
        const modal = document.getElementById('categoryModal');
        modal.classList.add('active');
        document.body.style.overflow = 'hidden';

        // Load categories if not loaded
        if (allCategoriesData.length === 0) {
            loadCategories();
        }
    }

    function closeCategoryModal() {
        const modal = document.getElementById('categoryModal');
        modal.classList.remove('active');
        document.body.style.overflow = '';
    }

    // ========================================
    // Category Loading & Rendering
    // ========================================
    function loadCategories() {
        allCategoriesData = categoryTree;
        renderCategories(categoryTree);
    }

    function renderCategories(categories) {
        const grid = document.getElementById('categoryGrid');

        if (categories.length === 0) {
            grid.innerHTML = '<p style="text-align: center; color: var(--text-secondary); padding: 2rem;">ไม่พบหมวดหมู่</p>';
            return;
        }

        let html = '';
        categories.forEach(parent => {
            html += `<div class="category-group">`;

            // Parent category header (คลิกได้)
            html += `
                <button type="button"
                        class="category-parent-header"
                        data-id="${parent.id}"
                        onclick="toggleCategory(${parent.id})">
                    <i class="bi bi-laptop"></i>
                    <span>${parent.name}</span>
                    <i class="bi bi-check-circle category-parent-check"></i>
                </button>
            `;

            // Subcategories เป็น tags
            if (parent.subCategories && parent.subCategories.length > 0) {
                html += '<div class="category-tags-wrapper">';
                parent.subCategories.forEach(sub => {
                    html += `
                        <button type="button"
                                class="category-tag-btn"
                                data-id="${sub.id}"
                                onclick="toggleCategory(${sub.id})">
                            ${sub.name}
                        </button>
                    `;
                });
                html += '</div>';
            }

            html += '</div>';
        });

        grid.innerHTML = html;
        updateModalUI();
    }

    // ========================================
    // Category Selection
    // ========================================
    function toggleCategory(id) {
        const index = selectedCategories.indexOf(id);

        if (index > -1) {
            selectedCategories.splice(index, 1);
        } else {
            if (selectedCategories.length >= MAX_CATEGORIES) {
                showToast(`เลือกได้สูงสุด ${MAX_CATEGORIES} หมวดหมู่เท่านั้น`, 'error');
                return;
            }
            selectedCategories.push(id);
        }

        updateModalUI();
    }

    function updateModalUI() {
        // Update parent headers
        document.querySelectorAll('.category-parent-header').forEach(btn => {
            const id = parseInt(btn.dataset.id);
            if (selectedCategories.includes(id)) {
                btn.classList.add('selected');
            } else {
                btn.classList.remove('selected');
            }
        });

        // Update tag buttons
        document.querySelectorAll('.category-tag-btn').forEach(btn => {
            const id = parseInt(btn.dataset.id);
            if (selectedCategories.includes(id)) {
                btn.classList.add('selected');
            } else {
                btn.classList.remove('selected');
            }
        });
    }

    // ========================================
    // Search Functions
    // ========================================
    function searchCategories(query) {
        const searchTerm = query.toLowerCase().trim();

        if (!searchTerm) {
            renderCategories(allCategoriesData);
            return;
        }

        const filtered = allCategoriesData
            .map(parent => {
                const parentMatches = parent.name.toLowerCase().includes(searchTerm);
                const matchedSubs = parent.subCategories?.filter(sub =>
                    sub.name.toLowerCase().includes(searchTerm)
                ) || [];

                if (parentMatches || matchedSubs.length > 0) {
                    return {
                        ...parent,
                        subCategories: parentMatches ? parent.subCategories : matchedSubs
                    };
                }
                return null;
            })
            .filter(item => item !== null);

        renderCategories(filtered);
    }

    function clearCategorySearch() {
        const searchInput = document.getElementById('categorySearchInput');
        if (searchInput) {
            searchInput.value = '';
            searchCategories('');
            searchInput.focus();
        }
    }

    // ========================================
    // Confirm & Display
    // ========================================
    function confirmCategories() {
        if (selectedCategories.length === 0) {
            showToast('กรุณาเลือกหมวดหมู่อย่างน้อย 1 หมวดหมู่', 'error');
            return;
        }

        updateSelectedDisplay();
        closeCategoryModal();
    }

    function updateSelectedDisplay() {
        const container = document.getElementById('selectedCategories');
        const input = document.getElementById('categoryIdsInput');
        const text = document.getElementById('selectedCategoryText');

        if (selectedCategories.length === 0) {
            container.innerHTML = '';
            input.value = '';
            text.textContent = 'เลือกหมวดหมู่';
            return;
        }

        input.value = selectedCategories.join(',');
        text.textContent = `เลือกแล้ว ${selectedCategories.length} หมวดหมู่`;

        // Find category names
        const allCategories = [];
        categoryTree.forEach(parent => {
            allCategories.push(parent);
            if (parent.subCategories) {
                allCategories.push(...parent.subCategories);
            }
        });

        container.innerHTML = selectedCategories.map(id => {
            const cat = allCategories.find(c => c.id === id);
            if (!cat) return '';

            return `
                <div class="category-tag">
                    <i class="bi ${cat.isParentCategory ? 'bi-folder' : 'bi-arrow-return-right'}"></i>
                    <span>${cat.name}</span>
                    <button type="button" onclick="removeCategory(${id})" class="category-tag-remove">
                        <i class="bi bi-x"></i>
                    </button>
                </div>
            `;
        }).join('');
    }

    function removeCategory(id) {
        selectedCategories = selectedCategories.filter(catId => catId !== id);
        updateSelectedDisplay();
        updateModalUI();
    }

    // ========================================
    // Toast Notification
    // ========================================
    function showToast(message, type = 'info') {
        const oldToast = document.querySelector('.community-toast');
        if (oldToast) oldToast.remove();

        const toast = document.createElement('div');
        toast.className = `community-toast community-toast-${type}`;

        let icon = 'bi-info-circle-fill';
        if (type === 'error') icon = 'bi-exclamation-triangle-fill';
        else if (type === 'success') icon = 'bi-check-circle-fill';
        else if (type === 'warning') icon = 'bi-exclamation-circle-fill';

        toast.innerHTML = `
            <i class="bi ${icon}"></i>
            <span>${message}</span>
        `;

        document.body.appendChild(toast);

        setTimeout(() => toast.classList.add('show'), 10);
        setTimeout(() => {
            toast.classList.remove('show');
            setTimeout(() => toast.remove(), 300);
        }, 4000);
    }

    // ========================================
    // Scroll to Error Field
    // ========================================
    function scrollToErrorField(fieldName) {
        let element;

        if (fieldName === 'ชื่อชุมชน') {
            element = document.querySelector('input[name="Name"]');
        } else if (fieldName === 'หมวดหมู่') {
            element = document.querySelector('.category-selector-btn');
        }

        if (element) {
            element.scrollIntoView({ behavior: 'smooth', block: 'center' });

            // Highlight effect
            element.style.transition = 'all 0.3s ease';
            element.style.boxShadow = '0 0 0 4px rgba(239, 68, 68, 0.3)';

            setTimeout(() => {
                element.style.boxShadow = '';
            }, 2000);
        }
    }

    // ========================================
    // Image Preview Functions
    // ========================================
    function handleImagePreview(file, input, previewImgId, previewBoxId, imageName) {
        if (!file) return;

        // Check file size (max 5MB)
        if (file.size > 5 * 1024 * 1024) {
            showToast(`${imageName}ใหญ่เกินไป (สูงสุด 5MB)`, 'error');
            input.value = '';
            return;
        }

        // Check file type
        const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];
        if (!validTypes.includes(file.type)) {
            showToast(`ประเภทไฟล์${imageName}ไม่ถูกต้อง (รองรับเฉพาะ JPG, PNG, GIF, WebP)`, 'error');
            input.value = '';
            return;
        }

        // Show preview
        const reader = new FileReader();
        reader.onload = function(e) {
            document.getElementById(previewImgId).src = e.target.result;
            document.getElementById(previewBoxId).style.display = 'block';
        };
        reader.readAsDataURL(file);
    }

    function removeImage() {
        const imageFileInput = document.getElementById('imageFileInput');
        const imagePreview = document.getElementById('imagePreview');

        imageFileInput.value = '';
        imagePreview.style.display = 'none';
        document.getElementById('previewImage').src = '#';

        showToast('ลบรูปโปรไฟล์เรียบร้อยแล้ว', 'success');
    }

    function removeCoverImage() {
        const coverImageFileInput = document.getElementById('coverImageFileInput');
        const coverImagePreview = document.getElementById('coverImagePreview');

        coverImageFileInput.value = '';
        coverImagePreview.style.display = 'none';
        document.getElementById('previewCoverImage').src = '#';

        showToast('ลบรูปปกเรียบร้อยแล้ว', 'success');
    }

    // ========================================
    // Drag & Drop Enhancement
    // ========================================
    function setupDragDrop(inputId, labelSelector) {
        const input = document.getElementById(inputId);
        const label = document.querySelector(`label[for="${inputId}"]`);

        if (!input || !label) return;

        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            label.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        ['dragenter', 'dragover'].forEach(eventName => {
            label.addEventListener(eventName, () => {
                label.classList.add('drag-over');
            }, false);
        });

        ['dragleave', 'drop'].forEach(eventName => {
            label.addEventListener(eventName, () => {
                label.classList.remove('drag-over');
            }, false);
        });

        label.addEventListener('drop', function(e) {
            const dt = e.dataTransfer;
            const files = dt.files;

            if (files.length > 0) {
                input.files = files;

                // Trigger change event
                const event = new Event('change', { bubbles: true });
                input.dispatchEvent(event);
            }
        }, false);
    }

        // ========================================
    // Initialize on Page Load
    // ========================================
    document.addEventListener('DOMContentLoaded', function() {
        // ========================================
        // แสดง Toast ถ้ามี Validation Errors
        // ========================================
        const errorElements = document.querySelectorAll('.field-validation-error');
        const missingFields = [];

        errorElements.forEach(el => {
            const errorText = el.textContent.trim();
            if (errorText) {
                const fieldName = el.getAttribute('data-valmsg-for');
                if (fieldName === 'Name') {
                    missingFields.push('ชื่อชุมชน');
                } else if (fieldName === 'CategoryIds') {
                    missingFields.push('หมวดหมู่');
                }
            }
        });

        if (missingFields.length > 0) {
            showToast(`กรุณากรอกข้อมูล: ${missingFields.join(', ')}`, 'error');
        }

        // โหลดค่าเดิมจาก ViewBag (เมื่อ validation fail)
        const serverSelectedIds = '@ViewBag.SelectedCategoryIds';
        if (serverSelectedIds && serverSelectedIds.trim() !== '') {
            selectedCategories = serverSelectedIds.split(',').map(id => parseInt(id.trim()));
            updateSelectedDisplay();
        }

        // Initialize existing category selection
        const existingValue = document.getElementById('categoryIdsInput').value;
        if (existingValue && selectedCategories.length === 0) {
            selectedCategories = existingValue.split(',').map(id => parseInt(id));
            updateSelectedDisplay();
        }

        // Profile image preview
        const imageFileInput = document.getElementById('imageFileInput');
        if (imageFileInput) {
            imageFileInput.addEventListener('change', function(e) {
                handleImagePreview(e.target.files[0], this, 'previewImage', 'imagePreview', 'รูปโปรไฟล์');
            });
        }

        // Cover image preview
        const coverImageFileInput = document.getElementById('coverImageFileInput');
        if (coverImageFileInput) {
            coverImageFileInput.addEventListener('change', function(e) {
                handleImagePreview(e.target.files[0], this, 'previewCoverImage', 'coverImagePreview', 'รูปปก');
            });
        }

        // Drag & Drop
        setupDragDrop('imageFileInput', 'label[for="imageFileInput"]');
        setupDragDrop('coverImageFileInput', 'label[for="coverImageFileInput"]');

        // Close modal on overlay click
        const overlay = document.querySelector('.category-modal-overlay');
        if (overlay) {
            overlay.addEventListener('click', closeCategoryModal);
        }

        // Close modal on ESC key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                const modal = document.getElementById('categoryModal');
                if (modal && modal.classList.contains('active')) {
                    closeCategoryModal();
                }
            }
        });

        // ========================================
        // Validate ก่อน Submit
        // ========================================
        const form = document.querySelector('.create-community-form');
        if (form) {
            form.addEventListener('submit', function(e) {
                const nameInput = document.querySelector('input[name="Name"]');
                const categoryInput = document.getElementById('categoryIdsInput');

                // ตรวจสอบชื่อชุมชน
                if (!nameInput.value.trim()) {
                    e.preventDefault();
                    showToast('กรุณากรอกข้อมูล: ชื่อชุมชน', 'error');
                    scrollToErrorField('ชื่อชุมชน');
                    setTimeout(() => nameInput.focus(), 500);
                    return;
                }

                if (nameInput.value.trim().length < 3) {
                    e.preventDefault();
                    showToast('ชื่อชุมชนต้องมีความยาวอย่างน้อย 3 ตัวอักษร', 'error');
                    scrollToErrorField('ชื่อชุมชน');
                    setTimeout(() => nameInput.focus(), 500);
                    return;
                }

                // ตรวจสอบหมวดหมู่
                if (!categoryInput.value.trim()) {
                    e.preventDefault();
                    showToast('กรุณากรอกข้อมูล: หมวดหมู่', 'error');
                    scrollToErrorField('หมวดหมู่');
                    setTimeout(() => openCategoryModal(), 500);
                    return;
                }

                // ✅ ถ้าผ่านทุกเงื่อนไข form จะ submit ไปที่ server
            });
        }

        // ========================================
        // แสดง Toast จาก TempData
        // ========================================
        const tempErrorMessage = '@TempData["ErrorMessage"]';
        if (tempErrorMessage && tempErrorMessage.trim() !== '') {
            setTimeout(() => {
                showToast(tempErrorMessage, 'error');
            }, 100);
        }

        const tempSuccessMessage = '@TempData["SuccessMessage"]';
        if (tempSuccessMessage && tempSuccessMessage.trim() !== '') {
            setTimeout(() => {
                showToast(tempSuccessMessage, 'success');
            }, 100);
        }

        document.querySelectorAll('input[name="CommunityType"]').forEach(radio => {
        radio.addEventListener('change', function() {
            const hiddenIsPrivate = document.getElementById('hiddenIsPrivate');
            const hiddenRequireApproval = document.getElementById('hiddenRequireApproval');

            if (this.value === 'public') {
                hiddenIsPrivate.value = 'false';
                hiddenRequireApproval.value = 'false';
            } else if (this.value === 'restricted') {
                hiddenIsPrivate.value = 'false';
                hiddenRequireApproval.value = 'true';
            } else if (this.value === 'private') {
                hiddenIsPrivate.value = 'true';
                hiddenRequireApproval.value = 'false';
            }
        });
    });

    });
</script>
 
<style>
    /* Container */
    .create-community-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 1rem;
        display: grid;
        grid-template-columns: 1fr 300px;
        gap: 2rem;
    }

    /* Header */
    .create-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 2rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid var(--border-primary, #e5e7eb);
    }

        .create-header h1 {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--text-primary, #1a1a1a);
            margin: 0;
        }

    .btn-close-page {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: transparent;
        border: none;
        border-radius: 8px;
        color: var(--text-secondary, #666);
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .btn-close-page:hover {
            background: var(--bg-hover, #f3f4f6);
            color: var(--text-primary, #1a1a1a);
        }

    /* Form */
    .create-community-form {
        background: var(--card-bg, #ffffff);
        border: 1px solid var(--border-primary, #e5e7eb);
        border-radius: 12px;
        padding: 2rem;
    }

    [data-theme="dark"] .create-community-form {
        background: var(--card-bg, #1f2937);
        border-color: var(--border-primary, #374151);
    }

    .form-section {
        margin-bottom: 2rem;
    }

    .form-label {
        display: block;
        font-size: 0.875rem;
        font-weight: 600;
        color: var(--text-primary, #1a1a1a);
        margin-bottom: 0.5rem;
    }

        .form-label.required::after {
            content: '*';
            color: #ef4444;
            margin-left: 4px;
        }

    .optional-text {
        font-weight: 400;
        color: var(--text-secondary, #666);
    }

    .form-help {
        font-size: 0.75rem;
        color: var(--text-secondary, #666);
        margin-top: 0.5rem;
        margin-bottom: 0;
    }

    /* Category Selector Button */
    .category-selector-btn {
        width: 100%;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 0.75rem 1rem;
        border: 1px solid var(--border-primary, #e5e7eb);
        border-radius: 8px;
        background: var(--bg-primary, #ffffff);
        color: var(--text-primary, #1a1a1a);
        font-size: 0.875rem;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .category-selector-btn:hover {
            border-color: var(--primary, #ff4500);
            background: rgba(255, 69, 0, 0.05);
        }

        .category-selector-btn i:first-child {
            font-size: 1.1rem;
        }

        .category-selector-btn span {
            flex: 1;
            text-align: left;
        }

        .category-selector-btn i:last-child {
            font-size: 0.875rem;
        }

    /* Selected Categories Tags */
    .selected-categories {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-top: 0.75rem;
    }

    .category-tag {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 0.75rem;
        background: var(--primary, #ff4500);
        color: white;
        border-radius: 9999px;
        font-size: 0.8125rem;
        font-weight: 500;
    }

    .category-tag-remove {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 18px;
        height: 18px;
        background: rgba(255, 255, 255, 0.2);
        border: none;
        border-radius: 50%;
        color: white;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .category-tag-remove:hover {
            background: rgba(255, 255, 255, 0.3);
        }

    /* Category Modal */
    .category-modal {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        display: none;
        align-items: center;
        justify-content: center;
        padding: 1rem;
    }

        .category-modal.active {
            display: flex;
        }

    .category-modal-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.6);
        backdrop-filter: blur(4px);
    }

    .category-modal-content {
        position: relative;
        width: 100%;
        max-width: 600px;
        background: var(--card-bg, #ffffff);
        border-radius: 16px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        max-height: 80vh;
        display: flex;
        flex-direction: column;
    }

    [data-theme="dark"] .category-modal-content {
        background: var(--card-bg, #1f2937);
    }

    .category-modal-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 1.5rem;
        border-bottom: 1px solid var(--border-primary, #e5e7eb);
    }

        .category-modal-header h3 {
            font-size: 1.125rem;
            font-weight: 700;
            color: var(--text-primary, #1a1a1a);
            margin: 0;
        }

    .category-modal-close {
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: transparent;
        border: none;
        border-radius: 8px;
        color: var(--text-secondary, #666);
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .category-modal-close:hover {
            background: var(--bg-hover, #f3f4f6);
        }

    .category-modal-body {
        padding: 1.5rem;
        overflow-y: auto;
    }

    .category-modal-desc {
        font-size: 0.875rem;
        color: var(--text-secondary, #666);
        margin: 0 0 1.5rem 0;
    }

    .category-grid {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    .category-group {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }


    .category-item {
        position: relative;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 0.75rem 1rem;
        border: 2px solid var(--border-primary, #e5e7eb);
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.2s ease;
        background: var(--bg-primary, #ffffff);
    }

        .category-item:hover {
            border-color: var(--primary, #ff4500);
            background: rgba(255, 69, 0, 0.05);
        }

        .category-item.selected {
            border-color: var(--primary, #ff4500);
            background: rgba(255, 69, 0, 0.1);
        }
    /* Parent category styling */
    .parent-category {
        font-weight: 600;
    }

        .parent-category > i:first-child {
            font-size: 1.25rem;
            color: var(--text-secondary, #666);
        }

        .parent-category.selected > i:first-child {
            color: var(--primary, #ff4500);
        }

    /* Subcategory styling */
    .subcategory-list {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        margin-left: 1.5rem;
    }

    .subcategory-item {
        border-left: 3px solid var(--border-primary, #e5e7eb);
        border-radius: 0 8px 8px 0;
    }

        .subcategory-item > i:first-child {
            font-size: 1rem;
            color: var(--text-tertiary, #999);
        }

        .subcategory-item.selected {
            border-left-color: var(--primary, #ff4500);
        }

            .subcategory-item.selected > i:first-child {
                color: var(--primary, #ff4500);
            }

    .category-item > span {
        flex: 1;
        font-size: 0.875rem;
        color: var(--text-primary, #1a1a1a);
    }

    .category-check {
        font-size: 1.25rem;
        color: var(--primary, #ff4500);
        opacity: 0;
        transition: opacity 0.2s ease;
    }

    .category-item.selected .category-check {
        opacity: 1;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .subcategory-list {
            margin-left: 1rem;
        }

        .category-item {
            padding: 0.625rem 0.875rem;
        }
    }

    .category-item > i:first-child {
        font-size: 1.75rem;
        color: var(--text-secondary, #666);
    }

    .category-item.selected > i:first-child {
        color: var(--primary, #ff4500);
    }

    .category-item > span {
        font-size: 0.875rem;
        font-weight: 500;
        color: var(--text-primary, #1a1a1a);
        text-align: center;
    }

    .category-check {
        position: absolute;
        top: 0.5rem;
        right: 0.5rem;
        font-size: 1.25rem;
        color: var(--primary, #ff4500);
        opacity: 0;
        transition: opacity 0.2s ease;
    }

    .category-item.selected .category-check {
        opacity: 1;
    }

    .category-modal-footer {
        display: flex;
        justify-content: flex-end;
        gap: 0.75rem;
        padding: 1.5rem;
        border-top: 1px solid var(--border-primary, #e5e7eb);
    }

    .btn-modal-cancel {
        padding: 0.75rem 1.5rem;
        background: transparent;
        border: 1px solid var(--border-primary, #e5e7eb);
        border-radius: 9999px;
        font-size: 0.875rem;
        font-weight: 600;
        color: var(--text-primary, #1a1a1a);
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .btn-modal-cancel:hover {
            background: var(--bg-hover, #f3f4f6);
        }

    .btn-modal-done {
        padding: 0.75rem 1.5rem;
        background: var(--primary, #ff4500);
        border: none;
        border-radius: 9999px;
        font-size: 0.875rem;
        font-weight: 600;
        color: white;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .btn-modal-done:hover {
            background: var(--primary-hover, #e03d00);
            transform: translateY(-1px);
        }

    /* Remove old select styles */
    .form-select[multiple],
    .form-select[multiple] option {
        display: none !important;
    }

    flex: 1;
    padding: 0.75rem 1rem;
    border: none;
    background: transparent;
    font-size: 0.875rem;
    color: var(--text-primary, #1a1a1a);
    }

    .form-input:focus {
        outline: none;
    }

    /* Textarea */
    .form-textarea {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 1px solid var(--border-primary, #e5e7eb);
        border-radius: 8px;
        font-size: 0.875rem;
        color: var(--text-primary, #1a1a1a);
        background: var(--bg-primary, #ffffff);
        resize: vertical;
        transition: all 0.2s ease;
    }

        .form-textarea:focus {
            outline: none;
            border-color: var(--primary, #ff4500);
            box-shadow: 0 0 0 3px rgba(255, 69, 0, 0.1);
        }

    [data-theme="dark"] .form-textarea {
        background: var(--bg-primary, #111827);
        border-color: var(--border-primary, #374151);
    }

    /* Radio Cards */
    .radio-card {
        margin-bottom: 0.75rem;
    }

        .radio-card input[type="radio"] {
            position: absolute;
            opacity: 0;
        }

    .radio-label {
        display: flex;
        align-items: flex-start;
        gap: 1rem;
        padding: 1rem;
        border: 2px solid var(--border-primary, #e5e7eb);
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .radio-label:hover {
            border-color: var(--border-hover, #d1d5db);
            background: var(--bg-hover, #f9fafb);
        }

    .radio-card input[type="radio"]:checked + .radio-label {
        border-color: var(--primary, #ff4500);
        background: rgba(255, 69, 0, 0.05);
    }

    [data-theme="dark"] .radio-label {
        border-color: var(--border-primary, #374151);
    }

        [data-theme="dark"] .radio-label:hover {
            background: var(--bg-hover, #1f2937);
        }

    .radio-icon {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: var(--bg-secondary, #f3f4f6);
        border-radius: 8px;
        font-size: 1.25rem;
        color: var(--text-secondary, #666);
    }

    .radio-card input[type="radio"]:checked + .radio-label .radio-icon {
        background: var(--primary, #ff4500);
        color: white;
    }

    .radio-content {
        flex: 1;
    }

    .radio-title {
        font-size: 0.875rem;
        font-weight: 600;
        color: var(--text-primary, #1a1a1a);
        margin-bottom: 0.25rem;
    }

    .radio-desc {
        font-size: 0.75rem;
        color: var(--text-secondary, #666);
        line-height: 1.4;
    }

    /* Checkbox Card */
    .checkbox-card input[type="checkbox"] {
        position: absolute;
        opacity: 0;
    }

    .checkbox-label {
        display: flex;
        align-items: flex-start;
        gap: 1rem;
        padding: 1rem;
        border: 2px solid var(--border-primary, #e5e7eb);
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .checkbox-label:hover {
            border-color: var(--border-hover, #d1d5db);
            background: var(--bg-hover, #f9fafb);
        }

    .checkbox-card input[type="checkbox"]:checked + .checkbox-label {
        border-color: var(--primary, #ff4500);
        background: rgba(255, 69, 0, 0.05);
    }

    .checkbox-icon {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: var(--bg-secondary, #f3f4f6);
        border-radius: 8px;
        font-size: 1.25rem;
        color: var(--text-secondary, #666);
    }

    .checkbox-card input[type="checkbox"]:checked + .checkbox-label .checkbox-icon {
        background: var(--primary, #ff4500);
        color: white;
    }

    .checkbox-content {
        flex: 1;
    }

    .checkbox-title {
        font-size: 0.875rem;
        font-weight: 600;
        color: var(--text-primary, #1a1a1a);
        margin-bottom: 0.25rem;
    }

    .checkbox-desc {
        font-size: 0.75rem;
        color: var(--text-secondary, #666);
    }

    /* Action Buttons */
    .form-actions {
        display: flex;
        justify-content: flex-end;
        gap: 0.75rem;
        padding-top: 1.5rem;
        border-top: 1px solid var(--border-primary, #e5e7eb);
    }

    .btn-cancel {
        padding: 0.75rem 1.5rem;
        background: transparent;
        border: 1px solid var(--border-primary, #e5e7eb);
        border-radius: 9999px;
        font-size: 0.875rem;
        font-weight: 600;
        color: var(--text-primary, #1a1a1a);
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .btn-cancel:hover {
            background: var(--bg-hover, #f3f4f6);
        }

    .btn-create {
        padding: 0.75rem 1.5rem;
        background: var(--primary, #ff4500);
        border: none;
        border-radius: 9999px;
        font-size: 0.875rem;
        font-weight: 600;
        color: white;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .btn-create:hover {
            background: var(--primary-hover, #e03d00);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(255, 69, 0, 0.3);
        }

    /* Sidebar */
    .create-community-sidebar {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .sidebar-card {
        background: var(--card-bg, #ffffff);
        border: 1px solid var(--border-primary, #e5e7eb);
        border-radius: 12px;
        padding: 1.5rem;
    }

    [data-theme="dark"] .sidebar-card {
        background: var(--card-bg, #1f2937);
        border-color: var(--border-primary, #374151);
    }

    .sidebar-title {
        font-size: 0.75rem;
        font-weight: 700;
        color: var(--text-secondary, #666);
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin: 0 0 1rem 0;
    }

    .sidebar-rules {
        list-style: none;
        padding: 0;
        margin: 0;
    }

        .sidebar-rules li {
            font-size: 0.8125rem;
            color: var(--text-primary, #1a1a1a);
            padding-left: 1.25rem;
            margin-bottom: 0.75rem;
            position: relative;
            line-height: 1.5;
        }

            .sidebar-rules li::before {
                content: '•';
                position: absolute;
                left: 0;
                color: var(--primary, #ff4500);
                font-weight: bold;
            }

            .sidebar-rules li:last-child {
                margin-bottom: 0;
            }

    .sidebar-text {
        font-size: 0.8125rem;
        color: var(--text-primary, #1a1a1a);
        line-height: 1.5;
        margin: 0;
    }

    /* Responsive */
    @@media (max-width: 991px) {
        .create-community-container {
            grid-template-columns: 1fr;
        }

        .create-community-sidebar {
            order: -1;
        }
    }

    @@media (max-width: 767px) {
        .create-community-container {
            padding: 1rem;
        }

        .create-community-form {
            padding: 1.5rem;
        }

        .form-actions {
            flex-direction: column-reverse;
        }

        .btn-cancel,
        .btn-create {
            width: 100%;
        }
        /* ========================================
           Toast สำหรับ Community Create Modal
           ======================================== */

        .community-toast {
            position: fixed;
            top: 80px;
            right: 20px;
            display: flex;
            align-items: center;
            gap: 12px;
            padding: 16px 20px;
            background: white;
            border-radius: 12px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(0, 0, 0, 0.1);
            z-index: 99999 !important; /* สูงกว่า modal */
            opacity: 0;
            transform: translateX(100px);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            min-width: 320px;
            max-width: 420px;
            pointer-events: auto;
            isolation: isolate;
        }

        [data-theme="dark"] .community-toast {
            background: #1f2937;
            color: #f9fafb;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.7), 0 0 0 1px rgba(255, 255, 255, 0.1);
        }

        .community-toast.show {
            opacity: 1;
            transform: translateX(0);
        }

        .community-toast i {
            font-size: 20px;
            flex-shrink: 0;
        }

        .community-toast span {
            font-size: 14px;
            font-weight: 500;
            flex: 1;
            color: #1a1a1a;
        }

        [data-theme="dark"] .community-toast span {
            color: #f9fafb;
        }
        /* Toast Types */
        .community-toast-error {
            border-left: 4px solid #ef4444;
        }

            .community-toast-error i {
                color: #ef4444;
            }

        .community-toast-success {
            border-left: 4px solid #10b981;
        }

            .community-toast-success i {
                color: #10b981;
            }

        .community-toast-warning {
            border-left: 4px solid #f59e0b;
        }

            .community-toast-warning i {
                color: #f59e0b;
            }

        .community-toast-info {
            border-left: 4px solid #3b82f6;
        }

            .community-toast-info i {
                color: #3b82f6;
            }
        /* Toast Responsive */
        @@media (max-width: 768px) {
            .community-toast {
                right: 16px;
                left: 16px;
                max-width: none;
                top: 70px;
            }
        }
        /* ========================================
           แก้ไข z-index ของ Modal
           ======================================== */
        /* Modal Container - ต้องต่ำกว่า toast */
        .category-modal {
            z-index: 9000 !important;
        }
        /* Modal Overlay */
        .category-modal-overlay {
            z-index: 1;
            pointer-events: auto;
        }
        /* Modal Content */
        .category-modal-content {
            z-index: 2;
            position: relative;
        }
        /* แทนที่ CSS #imagePreview เดิมด้วยโค้ดนี้ */
        /* ========================================
           Image Preview Boxes (ทั้ง Profile และ Cover)
           ======================================== */

        .image-preview-box {
            margin-top: 1rem;
            padding: 1rem;
            background: var(--bg-secondary, #f9fafb);
            border: 1px solid var(--border-primary, #e5e7eb);
            border-radius: 8px;
            position: relative;
        }

        [data-theme="dark"] .image-preview-box {
            background: var(--bg-secondary, #111827);
            border-color: var(--border-primary, #374151);
        }
        /* Preview Header with Label */
        .preview-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 0.75rem;
        }

        .preview-label {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.75rem;
            font-weight: 600;
            color: var(--text-secondary, #666);
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

            .preview-label i {
                font-size: 0.875rem;
            }
        /* Profile Image Preview */
        .image-preview-box:not(.cover-preview) img {
            width: 100%;
            max-width: 300px;
            max-height: 300px;
            object-fit: cover;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            display: block;
            margin: 0 auto;
        }
        /* Cover Image Preview - แนวนอน */
        .image-preview-box.cover-preview img {
            width: 100%;
            max-height: 200px;
            object-fit: cover;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        /* Remove Image Button */
        .btn-remove-image {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            margin-top: 0.75rem;
            background: #ef4444;
            border: none;
            border-radius: 6px;
            color: white;
            font-size: 0.875rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
        }

            .btn-remove-image:hover {
                background: #dc2626;
                transform: translateY(-1px);
            }

            .btn-remove-image i {
                font-size: 1rem;
            }
        /* Form Control File Input Styling */
        .form-control[type="file"] {
            padding: 0.625rem 1rem;
            font-size: 0.875rem;
            border: 1px dashed var(--border-primary, #e5e7eb);
            background: var(--bg-primary, #ffffff);
            transition: all 0.2s ease;
        }

            .form-control[type="file"]:hover {
                border-color: var(--primary, #ff4500);
                background: rgba(255, 69, 0, 0.02);
            }

        [data-theme="dark"] .form-control[type="file"] {
            background: var(--bg-primary, #111827);
            border-color: var(--border-primary, #374151);
        }

        .form-control[type="file"]::file-selector-button {
            padding: 0.5rem 1rem;
            margin-right: 1rem;
            background: var(--primary, #ff4500);
            border: none;
            border-radius: 6px;
            color: white;
            font-size: 0.875rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
        }

            .form-control[type="file"]::file-selector-button:hover {
                background: var(--primary-hover, #e03d00);
            }

        [data-theme="dark"] .form-control[type="file"]::file-selector-button {
            background: var(--primary, #ff4500);
        }
        /* Responsive */
        @@media (max-width: 768px) {
            .image-preview-box:not(.cover-preview) img {
                max-width: 100%;
                max-height: 250px;
            }

            .image-preview-box.cover-preview img {
                max-height: 150px;
            }
        }
        }

    /* Category Group */
    .category-group {
        margin-bottom: 1.5rem;
    }

    /* Parent Category Header (ไม่มี icon, ไม่คลิกได้) */
    /* Parent Category Header (ไม่มี icon) */
    .category-parent-header {
        display: flex;
        align-items: center;
        gap: 0.625rem;
        width: 100%;
        padding: 0.75rem 1rem;
        margin-bottom: 0.75rem;
        font-size: 0.875rem;
        font-weight: 700;
        color: var(--text-primary, #1a1a1a);
        background: var(--bg-secondary, #f9fafb);
        border: 2px solid var(--border-primary, #e5e7eb);
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.2s ease;
        text-align: left;
    }

        .category-parent-header:hover {
            background: rgba(255, 69, 0, 0.05);
            border-color: var(--primary, #ff4500);
        }

        .category-parent-header.selected {
            background: var(--primary, #ff4500);
            border-color: var(--primary, #ff4500);
            color: white;
        }

        /* ซ่อน icon laptop (ตัวแรก) */
        .category-parent-header > i:first-child {
            display: none;
        }

        .category-parent-header > span {
            flex: 1;
        }

    .category-parent-check {
        font-size: 1.125rem;
        opacity: 0;
        transition: opacity 0.2s ease;
    }

    .category-parent-header.selected .category-parent-check {
        opacity: 1;
    }

    [data-theme="dark"] .category-parent-header {
        color: #f9fafb;
        background: #374151;
        border-color: #4b5563;
    }

        [data-theme="dark"] .category-parent-header:hover {
            background: rgba(255, 69, 0, 0.1);
        }

        [data-theme="dark"] .category-parent-header.selected {
            background: var(--primary, #ff4500);
            border-color: var(--primary, #ff4500);
            color: white;
        }

    /* Category Tags Wrapper (แนวนอน, wrap ได้) */
    .category-tags-wrapper {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    /* Category Tag Button (ปุ่มเล็กๆ คล้ายภาพ) */
    .category-tag-btn {
        display: inline-flex;
        align-items: center;
        padding: 0.5rem 1rem;
        background: var(--bg-secondary, #f3f4f6);
        border: 1px solid var(--border-primary, #e5e7eb);
        border-radius: 9999px;
        font-size: 0.8125rem;
        font-weight: 500;
        color: var(--text-primary, #1a1a1a);
        cursor: pointer;
        transition: all 0.2s ease;
        white-space: nowrap;
    }

        .category-tag-btn:hover {
            background: rgba(255, 69, 0, 0.1);
            border-color: var(--primary, #ff4500);
            color: var(--primary, #ff4500);
        }

        .category-tag-btn.selected {
            background: var(--primary, #ff4500);
            border-color: var(--primary, #ff4500);
            color: white;
            font-weight: 600;
        }

    [data-theme="dark"] .category-tag-btn {
        background: #374151;
        border-color: #4b5563;
        color: #f9fafb;
    }

        [data-theme="dark"] .category-tag-btn:hover {
            background: rgba(255, 69, 0, 0.2);
        }

        [data-theme="dark"] .category-tag-btn.selected {
            background: var(--primary, #ff4500);
            border-color: var(--primary, #ff4500);
            color: white;
        }

    /* Responsive */
    @@media (max-width: 576px) {
        .category-parent-header

    {
        font-size: 0.8125rem;
    }

    .category-tag-btn {
        padding: 0.4rem 0.875rem;
        font-size: 0.75rem;
    }

    }

    /* ========== Search Box ========== */
    .category-search {
        position: relative;
        margin-bottom: 1.5rem;
    }

    .category-search-input {
        width: 100%;
        padding: 0.75rem 3rem 0.75rem 2.75rem;
        border: 2px solid var(--border-primary, #e5e7eb);
        border-radius: 9999px;
        font-size: 0.875rem;
        color: var(--text-primary, #1a1a1a);
        background: var(--bg-primary, #fff);
        transition: all 0.2s ease;
    }

        .category-search-input:focus {
            outline: none;
            border-color: var(--primary, #ff4500);
        }

    .category-search-icon {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        font-size: 1rem;
        color: var(--text-tertiary, #9ca3af);
        pointer-events: none;
    }

    .category-search-clear {
        position: absolute;
        right: 0.75rem;
        top: 50%;
        transform: translateY(-50%);
        width: 28px;
        height: 28px;
        display: none;
        align-items: center;
        justify-content: center;
        background: var(--bg-secondary, #f3f4f6);
        border: none;
        border-radius: 50%;
        cursor: pointer;
    }

    .category-search-input:not(:placeholder-shown) ~ .category-search-clear {
        display: flex;
    }
    /* ========================================
       Custom File Upload Styling
       ======================================== */

    /* ซ่อน input file เดิม */
    .file-input-hidden {
        position: absolute;
        width: 0.1px;
        height: 0.1px;
        opacity: 0;
        overflow: hidden;
        z-index: -1;
    }

    /* Custom Upload Container */
    .custom-file-upload {
        margin-bottom: 0.75rem;
    }

    /* Upload Label (คลิกได้) */
    .file-upload-label {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 1rem;
        padding: 2rem 1.5rem;
        border: 2px dashed var(--border-primary, #e5e7eb);
        border-radius: 12px;
        background: var(--bg-secondary, #f9fafb);
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .file-upload-label:hover {
            border-color: var(--primary, #ff4500);
            background: rgba(255, 69, 0, 0.03);
        }

        .file-upload-label:active {
            transform: scale(0.98);
        }

    [data-theme="dark"] .file-upload-label {
        background: var(--bg-secondary, #111827);
        border-color: var(--border-primary, #374151);
    }

        [data-theme="dark"] .file-upload-label:hover {
            background: rgba(255, 69, 0, 0.05);
        }

    /* Upload Icon */
    .file-upload-icon {
        width: 64px;
        height: 64px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: var(--primary, #ff4500);
        border-radius: 50%;
        color: white;
        font-size: 1.75rem;
        transition: all 0.3s ease;
    }

    .file-upload-label:hover .file-upload-icon {
        transform: scale(1.1);
        box-shadow: 0 8px 20px rgba(255, 69, 0, 0.3);
    }

    /* Upload Text */
    .file-upload-text {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 0.25rem;
        text-align: center;
    }

    .upload-title {
        font-size: 0.9375rem;
        font-weight: 600;
        color: var(--text-primary, #1a1a1a);
    }

    .upload-subtitle {
        font-size: 0.8125rem;
        color: var(--text-secondary, #666);
    }

    [data-theme="dark"] .upload-title {
        color: #f9fafb;
    }

    [data-theme="dark"] .upload-subtitle {
        color: #9ca3af;
    }

    /* เมื่อมีไฟล์แล้ว (optional enhancement) */
    .file-input-hidden:focus + .file-upload-label {
        outline: 2px solid var(--primary, #ff4500);
        outline-offset: 2px;
    }

    /* Drag & Drop State (optional - ต้องใช้ JavaScript เพิ่มเติม) */
    .file-upload-label.drag-over {
        border-color: var(--primary, #ff4500);
        background: rgba(255, 69, 0, 0.1);
    }

    /* Responsive */
    @@media (max-width: 576px) {
        .file-upload-label

    {
        padding: 1.5rem 1rem;
    }

    .file-upload-icon {
        width: 56px;
        height: 56px;
        font-size: 1.5rem;
    }

    .upload-title {
        font-size: 0.875rem;
    }

    .upload-subtitle {
        font-size: 0.75rem;
    }

    }

    /* Validation Error Styling */
    .field-validation-error {
        display: block;
        font-size: 0.8125rem;
        color: #ef4444;
        margin-top: 0.375rem;
        font-weight: 500;
    }

        .field-validation-error:empty {
            display: none;
        }

    .form-control.input-validation-error,
    .form-textarea.input-validation-error {
        border-color: #ef4444 !important;
    }

        .form-control.input-validation-error:focus,
        .form-textarea.input-validation-error:focus {
            box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1) !important;
        }

    [data-theme="dark"] .field-validation-error {
        color: #fca5a5;
    }

</style>