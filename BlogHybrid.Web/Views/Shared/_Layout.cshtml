@using Microsoft.AspNetCore.Identity
@using BlogHybrid.Domain.Entities
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<!DOCTYPE html>
<html lang="th" data-theme="light">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - 404alk</title>

    <!-- Core CSS -->
    <link rel="stylesheet" href="~/css/core/reset.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/core/variables.css" asp-append-version="true" />

    <!-- Theme CSS -->
    <link rel="stylesheet" href="~/css/themes/light-mode.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/themes/dark-mode.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/themes/theme-switcher.css" asp-append-version="true" />

    <!-- Layout CSS -->
    <link rel="stylesheet" href="~/css/modern/navbar.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/modern/sidebar.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/modern/homepage.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/user-sidebar.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/user-dropdown.css" asp-append-version="true" />
    <!-- Responsive CSS -->
    <link rel="stylesheet" href="~/css/user-responsive.css" asp-append-version="true" />

    <!-- Auth Modal CSS -->
    <link rel="stylesheet" href="~/css/auth-modal.css" asp-append-version="true" />

    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />

    <!-- Theme Flash Prevention -->
    <script>
        (function() {
            const savedTheme = localStorage.getItem('theme');
            const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
            const actualTheme = savedTheme || (prefersDark ? 'dark' : 'light');
            document.documentElement.setAttribute('data-theme', actualTheme);
        })();
    </script>

    @await RenderSectionAsync("Styles", required: false)
</head>
<body data-open-login-modal="@(TempData["OpenLoginModal"]?.ToString()?.ToLower() ?? "false")"
      data-open-register-modal="@(TempData["OpenRegisterModal"]?.ToString()?.ToLower() ?? "false")">
    <!-- Navbar -->
    <nav class="modern-navbar">
        <div class="modern-navbar-container">
            <!-- Logo -->
            <a asp-controller="Home" asp-action="Index" class="modern-logo">
                <div class="modern-logo-icon">4</div>
                <span class="modern-logo-text">404alk</span>
            </a>

            <!-- Search -->
            <div class="modern-search-container">
                <div class="modern-search">
                    <svg class="modern-search-icon" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
                    </svg>
                    <input type="search" class="modern-search-input" placeholder="ค้นหา..." />
                </div>
            </div>

            <!-- Actions -->
            <div class="modern-actions">
                <!-- Create Buttons -->
                @if (User.Identity?.IsAuthenticated == true)
                {
                     <button class="modern-create-btn" onclick="handleCreatePost()">                         
                        <i class="bi bi-plus-circle"></i>
                        <span class="modern-btn-text">สร้างโพสต์</span>                      
                     </button> 
                    <a href="/create-community" class="modern-btn-outline modern-create-community-btn">
                        <i class="bi bi-people"></i>
                        <span class="modern-btn-text">สร้างชุมชน</span>
                    </a>
                }
                else
                {
                    <button class="modern-create-btn" onclick="showToast('กรุณาเข้าสู่ระบบก่อนสร้างโพสต์', 'error')">
                        <i class="bi bi-plus-circle"></i>
                        <span class="modern-btn-text">สร้างโพสต์</span>
                    </button>
                    <button class="modern-btn-outline modern-create-community-btn" onclick="showToast('กรุณาเข้าสู่ระบบก่อนสร้างชุมชน', 'error')">
                        <i class="bi bi-people"></i>
                        <span class="modern-btn-text">สร้างชุมชน</span>
                    </button>
                }

                @if (User.Identity?.IsAuthenticated == true)
                {
                    <!-- ⭐ Modern User Menu (ปรับปรุงแล้ว) -->
                    <div class="modern-user-menu" id="userMenu">
                        <button class="modern-user-menu-btn" type="button" onclick="toggleUserMenu()">
                            @{
                                var currentUser = await UserManager.GetUserAsync(User);
                                var displayName = currentUser?.DisplayName ?? User.Identity?.Name ?? "User";
                            }
                            <img class="modern-user-avatar"
                                 src="@(!string.IsNullOrEmpty(currentUser?.ProfileImageUrl) ? currentUser.ProfileImageUrl : $"https://ui-avatars.com/api/?name={displayName}&background=ff4500&color=fff&bold=true&size=128")"
                                 alt="@displayName" />

                            <div class="modern-user-info">
                                <span class="modern-user-name">@displayName</span>
                                @if (!string.IsNullOrEmpty(currentUser?.Email))
                                {
                                    <span class="modern-user-email">@currentUser.Email</span>
                                }
                            </div>

                            <svg class="modern-user-chevron" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                            </svg>
                        </button>

                        <!-- Dropdown Menu -->
                        <div class="modern-user-dropdown" id="userMenuDropdown">
                            <!-- Header with Gradient -->
                            <div class="modern-user-dropdown-header">
                                <div class="modern-user-dropdown-info">
                                    <p class="modern-user-dropdown-name">@displayName</p>
                                    @if (!string.IsNullOrEmpty(currentUser?.Email))
                                    {
                                        <p class="modern-user-dropdown-email">@currentUser.Email</p>
                                    }
                                </div>
                            </div>

                            <!-- Body with Menu Items -->
                            <div class="modern-user-dropdown-body">
                                <!-- Profile -->
                                <a asp-area="User" asp-controller="Profile" asp-action="Index"
                                   class="modern-user-dropdown-item">
                                    <i class="bi bi-person-circle"></i>
                                    <span>โปรไฟล์</span>
                                </a>

                                <!-- Communities -->
                                <a asp-controller="Community" asp-action="MyCommunities"
                                   class="modern-user-dropdown-item">
                                    <i class="bi bi-people"></i>
                                    <span>ชุมชนของฉัน</span>
                                </a>

                                <!-- Bookmarks -->
                                <a href="#" class="modern-user-dropdown-item">
                                    <i class="bi bi-bookmark"></i>
                                    <span>รายการโปรด</span>
                                </a>

                                <div class="modern-user-dropdown-divider"></div>

                                <!-- Settings -->
                                <a asp-area="User" asp-controller="Settings" asp-action="Index"
                                   class="modern-user-dropdown-item settings">
                                    <i class="bi bi-gear"></i>
                                    <span>ตั้งค่า</span>
                                </a>

                                <!-- Admin Panel -->
                                @if (User.IsInRole("Admin"))
                                {
                                    <a asp-area="Admin" asp-controller="Dashboard" asp-action="Index"
                                       class="modern-user-dropdown-item">
                                        <i class="bi bi-shield-check"></i>
                                        <span>แผงควบคุม Admin</span>
                                    </a>
                                }

                                <div class="modern-user-dropdown-divider"></div>

                                <!-- Logout -->
                                <form asp-controller="Account" asp-action="Logout" method="post" class="m-0">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="modern-user-dropdown-item modern-user-dropdown-logout">
                                        <i class="bi bi-box-arrow-right"></i>
                                        <span>ออกจากระบบ</span>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <!-- Auth Buttons -->
                    <button class="modern-btn-outline" onclick="openLoginModal()">
                        เข้าสู่ระบบ
                    </button>
                    <button class="modern-btn-primary" onclick="openRegisterModal()">
                        สมัครสมาชิก
                    </button>
                }
            </div>
        </div>
    </nav>

    <!-- Main Container -->
    <div class="page-container">
        <main class="main-content">
            @RenderBody()
        </main>
        <partial name="_UserSidebar" />
    </div>

    <!-- Auth Modals -->
    <partial name="_AuthModals" />

    <!-- Toast Notifications -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="toast-notification toast-success" id="successToast">
            <i class="bi bi-check-circle-fill"></i>
            <span>@TempData["SuccessMessage"]</span>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="toast-notification toast-error" id="errorToast">
            <i class="bi bi-exclamation-triangle-fill"></i>
            <span>@TempData["ErrorMessage"]</span>
        </div>
    }

    @if (TempData["InfoMessage"] != null)
    {
        <div class="toast-notification toast-info" id="infoToast">
            <i class="bi bi-info-circle-fill"></i>
            <span>@TempData["InfoMessage"]</span>
        </div>
    }

    <!-- Scripts -->
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/theme-switcher.js" asp-append-version="true"></script>
    <script src="~/js/responsive.js" asp-append-version="true"></script>
    <script src="~/js/auth-modal.js" asp-append-version="true"></script>

    <script>
        // Handle Create Post for logged-in users
        function handleCreatePost() {
            // showToast('ฟีเจอร์กำลังพัฒนา กรุณารอติดตาม!', 'info');
            window.location.href = '@Url.Action("Create", "Post", new { area = "User" })';
        }

        // ⭐ Toggle User Menu Dropdown (ปรับปรุงแล้ว)
        function toggleUserMenu() {
            const userMenu = document.getElementById('userMenu');
            const dropdown = document.getElementById('userMenuDropdown');

            userMenu.classList.toggle('active');
            dropdown.classList.toggle('active');
        }

        // Initialize on page load
        document.addEventListener('DOMContentLoaded', function() {
            // Close dropdown when clicking outside
            document.addEventListener('click', function(event) {
                const userMenu = document.getElementById('userMenu');
                const dropdown = document.getElementById('userMenuDropdown');

                if (userMenu && dropdown && !userMenu.contains(event.target)) {
                    userMenu.classList.remove('active');
                    dropdown.classList.remove('active');
                }
            });

            // Close dropdown on ESC key
            document.addEventListener('keydown', function(event) {
                if (event.key === 'Escape') {
                    const userMenu = document.getElementById('userMenu');
                    const dropdown = document.getElementById('userMenuDropdown');

                    if (userMenu && dropdown) {
                        userMenu.classList.remove('active');
                        dropdown.classList.remove('active');
                    }
                }
            });

            // Auto-hide toast notifications
            const toasts = document.querySelectorAll('.toast-notification');
            toasts.forEach(toast => {
                setTimeout(() => {
                    toast.classList.add('toast-show');
                }, 100);

                setTimeout(() => {
                    toast.classList.remove('toast-show');
                    setTimeout(() => toast.remove(), 300);
                }, 5000);
            });
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>