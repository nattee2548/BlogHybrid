@using Microsoft.AspNetCore.Identity
@using BlogHybrid.Domain.Entities
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<!DOCTYPE html>
<html lang="th" data-theme="light">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - 404alk</title>

    <!-- Core CSS -->
    <link rel="stylesheet" href="~/css/core/reset.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/core/variables.css" asp-append-version="true" />

    <!-- Theme CSS -->
    <link rel="stylesheet" href="~/css/themes/light-mode.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/themes/dark-mode.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/themes/theme-switcher.css" asp-append-version="true" />

    <!-- Layout CSS -->
    <link rel="stylesheet" href="~/css/modern/navbar.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/modern/sidebar.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/modern/homepage.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/user-sidebar.css" asp-append-version="true" />

    <!-- Responsive CSS -->
    <link rel="stylesheet" href="~/css/user-responsive.css" asp-append-version="true" />

    <!-- Auth Modal CSS -->
    <link rel="stylesheet" href="~/css/auth-modal.css" asp-append-version="true" />

    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />

    <!-- Theme Flash Prevention -->
    <script>
        (function() {
            const savedTheme = localStorage.getItem('theme');
            const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
            const actualTheme = savedTheme || (prefersDark ? 'dark' : 'light');
            document.documentElement.setAttribute('data-theme', actualTheme);
        })();
    </script>

    @await RenderSectionAsync("Styles", required: false)
</head>
<body data-open-login-modal="@(TempData["OpenLoginModal"]?.ToString()?.ToLower() ?? "false")"
      data-open-register-modal="@(TempData["OpenRegisterModal"]?.ToString()?.ToLower() ?? "false")">
    <!-- Navbar -->
    <nav class="modern-navbar">
        <div class="modern-navbar-container">
            <!-- Logo -->
            <a asp-controller="Home" asp-action="Index" class="modern-logo">
                <div class="modern-logo-icon">4</div>
                <span class="modern-logo-text">404alk</span>
            </a>

            <!-- Search -->
            <div class="modern-search-container">
                <div class="modern-search">
                    <svg class="modern-search-icon" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
                    </svg>
                    <input type="search" class="modern-search-input" placeholder="ค้นหา..." />
                </div>
            </div>

            <!-- Actions -->
            <div class="modern-actions">
                @if (SignInManager.IsSignedIn(User))
                {
                    <!-- Create Button -->
                    <button class="modern-create-btn">
                        <svg viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                        </svg>
                        <span>สร้างโพสต์</span>
                    </button>

                    <!-- Theme Toggle -->
                    <button class="theme-toggle" role="switch" aria-checked="false" aria-label="Toggle theme">
                        <span class="theme-toggle-ball">
                            <svg class="theme-toggle-icon" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd" />
                            </svg>
                        </span>
                    </button>

                    <!-- User Menu -->
                    <div class="modern-user-menu">
                        <button class="modern-user-btn" id="userMenuButton">
                            @{
                                var currentUser = await UserManager.GetUserAsync(User);
                                var displayName = currentUser?.DisplayName ?? User.Identity?.Name ?? "User";
                            }
                            <img class="modern-user-avatar"
                                 src="https://ui-avatars.com/api/?name=@displayName&background=random"
                                 alt="@displayName" />
                            <div class="modern-user-info">
                                <span class="modern-user-name">@displayName</span>
                            </div>
                            <svg class="modern-user-chevron" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                            </svg>
                        </button>

                        <!-- User Dropdown -->
                        <div class="modern-user-dropdown" id="userMenuDropdown">
                            <div class="modern-user-dropdown-header">
                                <div class="modern-user-dropdown-info">
                                    <p class="modern-user-dropdown-name">@displayName</p>
                                    <p class="modern-user-dropdown-email">@currentUser?.Email</p>
                                </div>
                            </div>
                            <div class="modern-user-dropdown-divider"></div>
                            <a asp-area="User" asp-controller="Profile" asp-action="Index" class="modern-user-dropdown-item">
                                <i class="bi bi-person"></i>
                                <span>โปรไฟล์</span>
                            </a>
                            <a asp-area="User" asp-controller="Settings" asp-action="Index" class="modern-user-dropdown-item">
                                <i class="bi bi-gear"></i>
                                <span>ตั้งค่า</span>
                            </a>
                            @if (User.IsInRole("Admin"))
                            {
                                <div class="modern-user-dropdown-divider"></div>
                                <a asp-area="Admin" asp-controller="Dashboard" asp-action="Index" class="modern-user-dropdown-item">
                                    <i class="bi bi-shield-check"></i>
                                    <span>แอดมิน</span>
                                </a>
                            }
                            <div class="modern-user-dropdown-divider"></div>
                            <form asp-controller="Account" asp-action="Logout" method="post" style="margin: 0;">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="modern-user-dropdown-item modern-user-dropdown-logout">
                                    <i class="bi bi-box-arrow-right"></i>
                                    <span>ออกจากระบบ</span>
                                </button>
                            </form>
                        </div>
                    </div>
                }
                else
                {
                    <!-- Theme Toggle (Guest) -->
                    <button class="theme-toggle" role="switch" aria-checked="false" aria-label="Toggle theme">
                        <span class="theme-toggle-ball">
                            <svg class="theme-toggle-icon" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd" />
                            </svg>
                        </span>
                    </button>

                    <!-- ปุ่มเปิด Modal -->
                    <button onclick="openLoginModal()" class="modern-btn-outline" type="button">
                        <i class="bi bi-box-arrow-in-right"></i>
                        <span class="modern-btn-text">เข้าสู่ระบบ</span>
                    </button>
                    <button onclick="openRegisterModal()" class="modern-create-btn" type="button">
                        <i class="bi bi-person-plus"></i>
                        <span class="modern-btn-text">สมัครสมาชิก</span>
                    </button>
                }
            </div>
        </div>
    </nav>

    <!-- Main Container -->
    <div class="page-container">
        <main class="main-content">
            @RenderBody()
        </main>
        <partial name="_UserSidebar" />
    </div>

    <!-- Auth Modals -->
    <partial name="_AuthModals" />

    <!-- Toast Notifications -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="toast-notification toast-success" id="successToast">
            <i class="bi bi-check-circle-fill"></i>
            <span>@TempData["SuccessMessage"]</span>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="toast-notification toast-error" id="errorToast">
            <i class="bi bi-exclamation-triangle-fill"></i>
            <span>@TempData["ErrorMessage"]</span>
        </div>
    }

    @if (TempData["InfoMessage"] != null)
    {
        <div class="toast-notification toast-info" id="infoToast">
            <i class="bi bi-info-circle-fill"></i>
            <span>@TempData["InfoMessage"]</span>
        </div>
    }

    <!-- Scripts -->
    <script src="~/js/theme-switcher.js" asp-append-version="true"></script>
    <script src="~/js/responsive.js" asp-append-version="true"></script>
    <script src="~/js/auth-modal.js" asp-append-version="true"></script>

    <script>
        // User Menu Dropdown Toggle
        document.addEventListener('DOMContentLoaded', function() {
            const userMenuButton = document.getElementById('userMenuButton');
            const userMenuDropdown = document.getElementById('userMenuDropdown');

            if (userMenuButton && userMenuDropdown) {
                userMenuButton.addEventListener('click', function(e) {
                    e.stopPropagation();
                    userMenuDropdown.classList.toggle('active');
                });

                // Close dropdown when clicking outside
                document.addEventListener('click', function(e) {
                    if (!userMenuButton.contains(e.target) && !userMenuDropdown.contains(e.target)) {
                        userMenuDropdown.classList.remove('active');
                    }
                });
            }

            // Auto-hide toast notifications
            const toasts = document.querySelectorAll('.toast-notification');
            toasts.forEach(toast => {
                setTimeout(() => {
                    toast.classList.add('toast-show');
                }, 100);

                setTimeout(() => {
                    toast.classList.remove('toast-show');
                    setTimeout(() => toast.remove(), 300);
                }, 5000);
            });
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

<style>
    /* Guest User Buttons */
    .modern-btn-outline {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        background: transparent;
        border: 2px solid var(--border-color, #e5e7eb);
        border-radius: 20px;
        color: var(--main-text-color);
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .modern-btn-outline:hover {
            background: var(--hover-bg-color, #f3f4f6);
            border-color: var(--primary-color, #ff4500);
            color: var(--primary-color, #ff4500);
        }

    [data-theme="dark"] .modern-btn-outline {
        border-color: var(--border-color, #374151);
    }

        [data-theme="dark"] .modern-btn-outline:hover {
            background: var(--hover-bg-color, #374151);
        }

    /* User Dropdown Styles */
    .modern-user-dropdown {
        position: absolute;
        top: calc(100% + 0.5rem);
        right: 0;
        min-width: 240px;
        background: var(--card-bg-color, #ffffff);
        border: 1px solid var(--border-color, #e5e7eb);
        border-radius: 12px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        opacity: 0;
        visibility: hidden;
        transform: translateY(-10px);
        transition: all 0.2s ease;
        z-index: 1000;
    }

        .modern-user-dropdown.active {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
        }

    [data-theme="dark"] .modern-user-dropdown {
        background: var(--card-bg-color, #1f2937);
        border-color: var(--border-color, #374151);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);
    }

    .modern-user-dropdown-header {
        padding: 1rem;
    }

    .modern-user-dropdown-name {
        font-weight: 600;
        color: var(--main-text-color);
        margin: 0 0 0.25rem 0;
    }

    .modern-user-dropdown-email {
        font-size: 0.875rem;
        color: var(--secondary-text-color);
        margin: 0;
    }

    .modern-user-dropdown-divider {
        height: 1px;
        background: var(--border-color, #e5e7eb);
        margin: 0.5rem 0;
    }

    .modern-user-dropdown-item {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 0.75rem 1rem;
        color: var(--main-text-color);
        text-decoration: none;
        transition: background 0.2s ease;
        cursor: pointer;
        border: none;
        background: transparent;
        width: 100%;
        text-align: left;
        font-size: 0.95rem;
    }

        .modern-user-dropdown-item:hover {
            background: var(--hover-bg-color, #f3f4f6);
        }

    [data-theme="dark"] .modern-user-dropdown-item:hover {
        background: var(--hover-bg-color, #374151);
    }

    .modern-user-dropdown-item i {
        width: 1.25rem;
        font-size: 1.1rem;
    }

    .modern-user-dropdown-logout {
        color: #ef4444;
    }

        .modern-user-dropdown-logout:hover {
            background: rgba(239, 68, 68, 0.1);
        }

    /* Toast Notifications */
    .toast-notification {
        position: fixed;
        bottom: 2rem;
        right: 2rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 1rem 1.5rem;
        background: var(--card-bg-color, #ffffff);
        border-radius: 12px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        font-weight: 500;
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.3s ease;
        z-index: 10000;
        max-width: 400px;
    }

        .toast-notification.toast-show {
            opacity: 1;
            transform: translateY(0);
        }

        .toast-notification i {
            font-size: 1.5rem;
        }

    .toast-success {
        color: #10b981;
        border-left: 4px solid #10b981;
    }

    .toast-error {
        color: #ef4444;
        border-left: 4px solid #ef4444;
    }

    .toast-info {
        color: #3b82f6;
        border-left: 4px solid #3b82f6;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .modern-btn-text {
            display: none;
        }

        .modern-btn-outline,
        .modern-create-btn {
            padding: 0.5rem;
        }

        .toast-notification {
            bottom: 1rem;
            right: 1rem;
            left: 1rem;
            max-width: none;
        }
    }
</style>