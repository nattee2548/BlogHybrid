@* BlogHybrid.Web/Views/Shared/_CommentItem.cshtml *@
@model BlogHybrid.Application.DTOs.Post.CommentDto

@{
    // คำนวณ time ago
    var timeDiff = DateTime.UtcNow - Model.CreatedAt;
    string timeAgo;
    
    if (timeDiff.TotalMinutes < 1)
    {
        timeAgo = "เมื่อสักครู่";
    }
    else if (timeDiff.TotalHours < 1)
    {
        timeAgo = $"{(int)timeDiff.TotalMinutes} นาทีที่แล้ว";
    }
    else if (timeDiff.TotalDays < 1)
    {
        timeAgo = $"{(int)timeDiff.TotalHours} ชั่วโมงที่แล้ว";
    }
    else if (timeDiff.TotalDays < 7)
    {
        timeAgo = $"{(int)timeDiff.TotalDays} วันที่แล้ว";
    }
    else if (timeDiff.TotalDays < 30)
    {
        timeAgo = $"{(int)(timeDiff.TotalDays / 7)} สัปดาห์ที่แล้ว";
    }
    else
    {
        timeAgo = Model.CreatedAt.ToString("dd MMM yyyy", new System.Globalization.CultureInfo("th-TH"));
    }
}

<div class="comment-item" id="comment-@Model.Id">
    <div class="comment-content-wrapper">
        <!-- Comment Header -->
        <div class="comment-header">
            <!-- Author Avatar -->
            <div class="comment-avatar">
                @if (!string.IsNullOrEmpty(Model.AuthorProfileImageUrl))
                {
                    <img src="@Model.AuthorProfileImageUrl" 
                         alt="@Model.AuthorDisplayName"
                         loading="lazy" />
                }
                else
                {
                    <i class="bi bi-person-circle"></i>
                }
            </div>

            <!-- Author Info & Actions -->
            <div class="comment-info-section">
                <div class="comment-author-info">
                    <span class="comment-author">@Model.AuthorDisplayName</span>
                    <span class="comment-username">@@@Model.AuthorUserName</span>
                    <span class="comment-separator">•</span>
                    <span class="comment-time" title="@Model.CreatedAt.ToString("dd MMM yyyy HH:mm")">
                        @timeAgo
                    </span>
                    @if (Model.UpdatedAt != Model.CreatedAt)
                    {
                        <span class="comment-edited">(แก้ไข)</span>
                    }
                </div>

                <!-- Comment Menu (Edit/Delete) -->
                @if (Model.CanEdit || Model.CanDelete)
                {
                    <div class="comment-menu-wrapper">
                        <button class="btn-menu" onclick="toggleCommentMenu(@Model.Id)">
                            <i class="bi bi-three-dots"></i>
                        </button>
                        <div class="comment-menu" id="menu-@Model.Id">
                            @if (Model.CanEdit)
                            {
                                <button onclick="editComment(@Model.Id)">
                                    <i class="bi bi-pencil"></i> แก้ไข
                                </button>
                            }
                            @if (Model.CanDelete)
                            {
                                <button onclick="deleteComment(@Model.Id)" class="danger">
                                    <i class="bi bi-trash"></i> ลบ
                                </button>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Comment Body -->
        <div class="comment-body">
            <p>@Model.Content</p>
        </div>

        <!-- Comment Actions (Vote, Reaction, Reply) -->
        <div class="comment-actions">
            <!-- Vote Section -->
            @await Html.PartialAsync("_CommentVoteSection", Model)

            <span class="comment-action-divider"></span>

            <!-- Reaction Section -->
            @await Html.PartialAsync("_CommentReactionSection", Model)

            <span class="comment-action-divider"></span>

            <!-- Legacy Like Button (Optional - แสดงเฉพาะถ้ายังต้องการ) -->
            @* 
            <button class="comment-action-btn like-btn @(Model.IsLikedByCurrentUser ? "liked" : "")" 
                    onclick="toggleCommentLike(@Model.Id)">
                <i class="bi @(Model.IsLikedByCurrentUser ? "bi-heart-fill" : "bi-heart")"></i>
                @if (Model.LikeCount > 0)
                {
                    <span>@Model.LikeCount</span>
                }
            </button>
            *@

            <!-- Reply Button -->
            @if (User.Identity?.IsAuthenticated == true)
            {
                <button class="comment-action-btn reply-btn" 
                        onclick="toggleReplyForm(@Model.Id)">
                    <i class="bi bi-reply"></i> ตอบกลับ
                </button>
            }
        </div>

        <!-- Reply Form (Hidden by default) -->
        @if (User.Identity?.IsAuthenticated == true)
        {
            var postId = ViewData["PostId"] as int? ?? 0;
            var postSlug = ViewData["PostSlug"] as string ?? string.Empty;
            
            <div class="reply-form" id="reply-form-@Model.Id" style="display: none;">
                <form asp-controller="Post" asp-action="AddComment" method="post" class="comment-reply-form">
                    <input type="hidden" name="postId" value="@postId" />
                    <input type="hidden" name="parentCommentId" value="@Model.Id" />
                    <input type="hidden" name="returnSlug" value="@postSlug" />
                    <textarea name="content" 
                              class="form-control reply-textarea" 
                              placeholder="ตอบกลับ @Model.AuthorDisplayName..." 
                              rows="3" 
                              required></textarea>
                    <div class="reply-actions">
                        <button type="button" class="btn btn-sm btn-outline-secondary" 
                                onclick="toggleReplyForm(@Model.Id)">
                            ยกเลิก
                        </button>
                        <button type="submit" class="btn btn-sm btn-primary">
                            <i class="bi bi-send"></i> ส่ง
                        </button>
                    </div>
                </form>
            </div>
        }
        
        <!-- Replies (Recursive) -->
        @if (Model.Replies.Any())
        {
            <div class="comment-replies">
                @foreach (var reply in Model.Replies)
                {
                    @await Html.PartialAsync("_CommentItem", reply)
                }
            </div>
        }
    </div>
</div>
