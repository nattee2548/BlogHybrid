@model BlogHybrid.Web.Areas.Admin.Models.EditCategoryViewModel
@{
    ViewData["Title"] = "แก้ไขหมวดหมู่";
}

<div class="admin-page-header">
    <div>
        <h1><i class="bi bi-pencil"></i> แก้ไขหมวดหมู่</h1>
        <p class="text-muted">อัปเดตข้อมูลหมวดหมู่</p>
    </div>
    <div>
        <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">
            <i class="bi bi-x-lg"></i> ยกเลิก
        </a>
    </div>
</div>

<div class="row">
    <div class="col-lg-8 mx-auto">
        <form asp-action="Edit" method="post" enctype="multipart/form-data" class="admin-card" id="editForm">
            <div class="admin-card-body">
                <input type="hidden" asp-for="Id" />
                @Html.AntiForgeryToken()

                <!-- ข้อมูลพื้นฐาน -->
                <div class="form-section">
                    <h5 class="section-title">
                        <i class="bi bi-info-circle"></i> ข้อมูลพื้นฐาน
                    </h5>

                    <!-- Parent Category -->
                    <div class="mb-3">
                        <label asp-for="ParentCategoryId" class="form-label">หมวดหมู่หลัก</label>
                        <select asp-for="ParentCategoryId" class="form-control">
                            <option value="">-- ไม่มี (เป็นหมวดหมู่หลัก) --</option>
                            @if (ViewBag.ParentCategories != null)
                            {
                                foreach (var cat in ViewBag.ParentCategories)
                                {
                                    <option value="@cat.Id" selected="@(Model.ParentCategoryId == cat.Id)">@cat.Name</option>
                                }
                            }
                        </select>
                        <small class="text-muted">
                            เปลี่ยนหมวดหมู่หลักได้ (หมวดหมู่ย่อยจะยังอยู่ในหมวดหมู่นี้)
                        </small>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Name" class="form-label required">ชื่อหมวดหมู่</label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Description" class="form-label required">คำอธิบาย</label>
                        <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                </div>

                <hr>

                <!-- การแสดงผล -->
                <div class="form-section">
                    <h5 class="section-title">
                        <i class="bi bi-palette"></i> การแสดงผล
                    </h5>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="Color" class="form-label required">สีประจำหมวดหมู่</label>
                            <div class="color-picker-wrapper">
                                <input asp-for="Color" type="color" class="form-control form-control-color" id="colorPicker" />
                                <input asp-for="Color" type="text" class="form-control mt-2" id="colorText" />
                            </div>
                            <span asp-validation-for="Color" class="text-danger"></span>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label class="form-label">ตัวอย่างสี</label>
                            <div class="color-preview-box" id="colorPreview">
                                <div class="color-preview-icon">
                                    <i class="bi bi-folder"></i>
                                </div>
                                <div class="color-preview-text">@Model.Name</div>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="ImageFile" class="form-label">อัปโหลดรูปภาพใหม่</label>
                        <input asp-for="ImageFile" type="file" class="form-control" accept="image/*" id="imageFileInput" />
                        <span asp-validation-for="ImageFile" class="text-danger"></span>
                        <small class="text-muted">รูปภาพ JPG, PNG, GIF หรือ WebP (สูงสุด 5MB)</small>

                        @if (!string.IsNullOrEmpty(Model.CurrentImageUrl))
                        {
                            <div class="mt-2">
                                <label class="form-label">รูปภาพปัจจุบัน:</label>
                                <div>
                                    <img src="@Model.CurrentImageUrl" alt="Current" class="img-thumbnail" style="max-height: 150px;" />
                                </div>
                            </div>
                        }

                        <div id="imagePreview" class="mt-2" style="display: none;">
                            <label class="form-label">ตัวอย่างรูปใหม่:</label>
                            <div>
                                <img id="previewImage" src="#" alt="Preview" class="img-thumbnail" style="max-height: 150px;" />
                                <button type="button" class="btn btn-sm btn-danger mt-2" onclick="removeImage()">
                                    <i class="bi bi-trash"></i> ลบรูป
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="ImageUrl" class="form-label">หรือใส่ URL รูปภาพ</label>
                        <input asp-for="ImageUrl" class="form-control" placeholder="https://example.com/image.jpg" />
                        <span asp-validation-for="ImageUrl" class="text-danger"></span>
                        <small class="text-muted">ถ้าไม่ได้อัปโหลดรูป สามารถใส่ URL ได้</small>
                    </div>
                </div>

                <hr>

                <!-- การตั้งค่า -->
                <div class="form-section">
                    <h5 class="section-title">
                        <i class="bi bi-gear"></i> การตั้งค่า
                    </h5>

                    <div class="mb-3">
                        <label asp-for="SortOrder" class="form-label">ลำดับการแสดงผล</label>
                        <input asp-for="SortOrder" type="number" class="form-control" />
                        <span asp-validation-for="SortOrder" class="text-danger"></span>
                        <small class="text-muted">ตัวเลขน้อยจะแสดงก่อน (0 = ด้านบนสุด)</small>
                    </div>

                    <div class="form-check mb-3">
                        <input asp-for="IsActive" class="form-check-input" type="checkbox" />
                        <label asp-for="IsActive" class="form-check-label">
                            เปิดใช้งาน
                        </label>
                        <br />
                        <small class="text-muted">หมวดหมู่ที่ปิดใช้งานจะไม่แสดงในหน้าเว็บ</small>
                    </div>
                </div>

                <div class="d-flex justify-content-end gap-2">
                    <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">
                        <i class="bi bi-x-lg"></i> ยกเลิก
                    </a>
                    <button type="button" class="btn btn-primary" onclick="confirmSave()">
                        <i class="bi bi-check-lg"></i> บันทึกการเปลี่ยนแปลง
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Confirmation Modal -->
<div class="modal fade" id="confirmModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-check-circle text-primary"></i> ยืนยันการแก้ไข
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>คุณได้ทำการเปลี่ยนแปลงข้อมูลต่อไปนี้:</p>
                <div id="changesSummary"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ยกเลิก</button>
                <button type="button" class="btn btn-primary" id="confirmSaveButton">
                    <i class="bi bi-check-lg"></i> ยืนยัน
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        let confirmModal;
        let hasChanges = false;

        // Store original values
        const originalValues = {
            parentCategoryId: '@Model.ParentCategoryId',
            name: '@Html.Raw(Model.Name)',
            description: '@Html.Raw(Model.Description)',
            color: '@Model.Color',
            imageUrl: '@Html.Raw(Model.ImageUrl ?? "")',
            sortOrder: @Model.SortOrder,
            isActive: @Json.Serialize(Model.IsActive)
        };

        document.addEventListener('DOMContentLoaded', function() {
            confirmModal = new bootstrap.Modal(document.getElementById('confirmModal'));

            // Color picker sync
            const colorPicker = document.getElementById('colorPicker');
            const colorText = document.getElementById('colorText');
            const colorPreview = document.getElementById('colorPreview');

            function updateColor(color) {
                colorPicker.value = color;
                colorText.value = color;
                colorPreview.style.backgroundColor = color;
            }

            colorPicker.addEventListener('input', (e) => {
                updateColor(e.target.value);
                hasChanges = true;
            });

            colorText.addEventListener('input', (e) => {
                const value = e.target.value;
                if (/^#[0-9A-F]{6}$/i.test(value)) {
                    updateColor(value);
                    hasChanges = true;
                }
            });

            updateColor(colorPicker.value);

            // Image preview
            const imageFileInput = document.getElementById('imageFileInput');
            if (imageFileInput) {
                imageFileInput.addEventListener('change', function(e) {
                    const file = e.target.files[0];
                    if (file) {
                        if (file.size > 5 * 1024 * 1024) {
                            alert('ไฟล์ใหญ่เกินไป (สูงสุด 5MB)');
                            this.value = '';
                            return;
                        }

                        const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];
                        if (!validTypes.includes(file.type)) {
                            alert('ประเภทไฟล์ไม่ถูกต้อง (รองรับเฉพาะ JPG, PNG, GIF, WebP)');
                            this.value = '';
                            return;
                        }

                        const reader = new FileReader();
                        reader.onload = function(e) {
                            document.getElementById('previewImage').src = e.target.result;
                            document.getElementById('imagePreview').style.display = 'block';
                        };
                        reader.readAsDataURL(file);
                        hasChanges = true;
                    }
                });
            }

            // Track changes
            document.querySelectorAll('#editForm input, #editForm textarea, #editForm select').forEach(input => {
                input.addEventListener('change', () => hasChanges = true);
            });

            // Confirm save
            document.getElementById('confirmSaveButton').addEventListener('click', function() {
                hasChanges = false;
                document.getElementById('editForm').submit();
            });
        });

        function removeImage() {
            document.getElementById('imageFileInput').value = '';
            document.getElementById('imagePreview').style.display = 'none';
        }

        function confirmSave() {
            if (!document.getElementById('editForm').checkValidity()) {
                document.getElementById('editForm').reportValidity();
                return;
            }

            const currentValues = {
                parentCategoryId: document.querySelector('[name="ParentCategoryId"]').value,
                name: document.querySelector('[name="Name"]').value,
                description: document.querySelector('[name="Description"]').value,
                color: document.querySelector('[name="Color"]').value,
                imageUrl: document.querySelector('[name="ImageUrl"]').value,
                sortOrder: parseInt(document.querySelector('[name="SortOrder"]').value),
                isActive: document.querySelector('[name="IsActive"]').checked
            };

            let changesHtml = '';

            // Check parent category change
            if (currentValues.parentCategoryId !== originalValues.parentCategoryId) {
                const parentSelect = document.querySelector('[name="ParentCategoryId"]');
                const oldText = originalValues.parentCategoryId ? 'มี' : 'ไม่มี (หมวดหมู่หลัก)';
                const newText = parentSelect.selectedIndex > 0
                    ? parentSelect.options[parentSelect.selectedIndex].text
                    : 'ไม่มี (หมวดหมู่หลัก)';
                changesHtml += `
                    <div class="change-item">
                        <div class="change-label">หมวดหมู่หลัก</div>
                        <div class="change-value">
                            <span class="change-old">${oldText}</span> →
                            <span class="change-new">${newText}</span>
                        </div>
                    </div>
                `;
            }

            if (currentValues.name !== originalValues.name) {
                changesHtml += `
                    <div class="change-item">
                        <div class="change-label">ชื่อหมวดหมู่</div>
                        <div class="change-value">
                            <span class="change-old">${originalValues.name}</span> →
                            <span class="change-new">${currentValues.name}</span>
                        </div>
                    </div>
                `;
            }

            if (currentValues.description !== originalValues.description) {
                changesHtml += `
                    <div class="change-item">
                        <div class="change-label">คำอธิบาย</div>
                        <div class="change-value">เปลี่ยนแปลงคำอธิบาย</div>
                    </div>
                `;
            }

            if (currentValues.color !== originalValues.color) {
                changesHtml += `
                    <div class="change-item">
                        <div class="change-label">สี</div>
                        <div class="change-value">
                            <span class="change-old">${originalValues.color}</span> →
                            <span class="change-new">${currentValues.color}</span>
                        </div>
                    </div>
                `;
            }

            if (currentValues.sortOrder !== originalValues.sortOrder) {
                changesHtml += `
                    <div class="change-item">
                        <div class="change-label">ลำดับการแสดงผล</div>
                        <div class="change-value">
                            <span class="change-old">${originalValues.sortOrder}</span> →
                            <span class="change-new">${currentValues.sortOrder}</span>
                        </div>
                    </div>
                `;
            }

            if (currentValues.isActive !== originalValues.isActive) {
                changesHtml += `
                    <div class="change-item">
                        <div class="change-label">สถานะ</div>
                        <div class="change-value">
                            <span class="change-old">${originalValues.isActive ? 'เปิดใช้งาน' : 'ปิดใช้งาน'}</span> →
                            <span class="change-new">${currentValues.isActive ? 'เปิดใช้งาน' : 'ปิดใช้งาน'}</span>
                        </div>
                    </div>
                `;
            }

            if (changesHtml === '') {
                changesHtml = '<p class="text-muted">ไม่มีการเปลี่ยนแปลง</p>';
            }

            document.getElementById('changesSummary').innerHTML = changesHtml;
            confirmModal.show();
        }
    </script>
}

<style>
    .change-item {
        padding: 8px 0;
        border-bottom: 1px solid #e5e7eb;
    }

        .change-item:last-child {
            border-bottom: none;
        }

    .change-label {
        font-weight: 600;
        color: #374151;
        font-size: 13px;
    }

    .change-value {
        font-size: 13px;
        color: #6b7280;
        margin-top: 4px;
    }

    .change-old {
        text-decoration: line-through;
        color: #ef4444;
    }

    .change-new {
        color: #10b981;
        font-weight: 500;
    }

    .color-preview-box {
        height: 100px;
        border-radius: 8px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        color: white;
        transition: all 0.3s ease;
    }

    .color-preview-icon {
        font-size: 32px;
        margin-bottom: 8px;
    }

    .color-preview-text {
        font-weight: 600;
        font-size: 14px;
    }
</style>