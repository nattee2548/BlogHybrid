@model BlogHybrid.Web.Areas.Admin.Models.ChangeUserPasswordViewModel
@{
    ViewData["Title"] = "เปลี่ยนรหัสผ่าน";
}

<!-- Toast Notifications -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="toast-notification toast-success" id="successToast">
        <i class="bi bi-check-circle-fill"></i>
        <span>@TempData["SuccessMessage"]</span>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="toast-notification toast-error" id="errorToast">
        <i class="bi bi-exclamation-triangle-fill"></i>
        <span>@TempData["ErrorMessage"]</span>
    </div>
}

@if (TempData["InfoMessage"] != null)
{
    <div class="toast-notification toast-info" id="infoToast">
        <i class="bi bi-info-circle-fill"></i>
        <span>@TempData["InfoMessage"]</span>
    </div>
}

@if (TempData["WarningMessage"] != null)
{
    <div class="toast-notification toast-warning" id="warningToast">
        <i class="bi bi-exclamation-circle-fill"></i>
        <span>@TempData["WarningMessage"]</span>
    </div>
}

<div class="admin-page-header">
    <div>
        <h1><i class="bi bi-key"></i> เปลี่ยนรหัสผ่าน</h1>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-action="Index">สมาชิก</a></li>
                <li class="breadcrumb-item"><a asp-action="Details" asp-route-id="@Model.UserId">@Model.UserName</a></li>
                <li class="breadcrumb-item active">เปลี่ยนรหัสผ่าน</li>
            </ol>
        </nav>
    </div>
</div>

<div class="row">
    <div class="col-lg-6 mx-auto">
        <div class="admin-card">
            <div class="admin-card-header">
                <h5 class="admin-card-title">
                    <i class="bi bi-shield-lock"></i> เปลี่ยนรหัสผ่านสำหรับ: @Model.UserName
                </h5>
            </div>
            <div class="admin-card-body">
                <div class="alert alert-warning">
                    <i class="bi bi-exclamation-triangle"></i>
                    <strong>คำเตือน:</strong> การเปลี่ยนรหัสผ่านจะมีผลทันที และผู้ใช้จะถูกล็อกเอาท์จากทุก device
                </div>

                <form asp-action="ChangePassword" method="post">
                    @Html.HiddenFor(m => m.UserId)
                    @Html.HiddenFor(m => m.UserName)
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                    <div class="mb-3">
                        <label asp-for="NewPassword" class="form-label required"></label>
                        <input asp-for="NewPassword" class="form-control" autocomplete="new-password" />
                        <span asp-validation-for="NewPassword" class="text-danger"></span>
                        <small class="text-muted">รหัสผ่านต้องมีความยาวอย่างน้อย 6 ตัวอักษร</small>
                    </div>

                    <div class="mb-3">
                        <label asp-for="ConfirmPassword" class="form-label required"></label>
                        <input asp-for="ConfirmPassword" class="form-control" autocomplete="new-password" />
                        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                    </div>

                    <hr class="my-4" />

                    <div class="d-flex gap-2">
                        <button type="button" class="btn btn-warning" onclick="confirmChangePassword()">
                            <i class="bi bi-key"></i> เปลี่ยนรหัสผ่าน
                        </button>
                        <a asp-action="Details" asp-route-id="@Model.UserId" class="btn btn-secondary">
                            <i class="bi bi-x-circle"></i> ยกเลิก
                        </a>
                    </div>
                </form>
            </div>
        </div>

        <!-- Password Strength Indicator -->
        <div class="admin-card mt-4">
            <div class="admin-card-body">
                <h6 class="mb-3"><i class="bi bi-shield-check"></i> ความแข็งแกร่งของรหัสผ่าน</h6>
                <div class="password-strength-bar mb-2">
                    <div id="strengthBar" class="strength-fill"></div>
                </div>
                <p id="strengthText" class="text-muted small mb-0">กรุณากรอกรหัสผ่าน</p>
                
                <div class="mt-3">
                    <p class="small mb-2"><strong>คำแนะนำ:</strong></p>
                    <ul class="small text-muted mb-0">
                        <li id="lengthCheck">ความยาวอย่างน้อย 8 ตัวอักษร</li>
                        <li id="lowercaseCheck">มีตัวอักษรพิมพ์เล็ก (a-z)</li>
                        <li id="uppercaseCheck">มีตัวอักษรพิมพ์ใหญ่ (A-Z)</li>
                        <li id="numberCheck">มีตัวเลข (0-9)</li>
                        <li id="specialCheck">มีอักขระพิเศษ</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Change Password Confirmation Modal -->
<div class="modal fade" id="changePasswordModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title text-warning">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                    ยืนยันการเปลี่ยนรหัสผ่าน
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body text-center py-4">
                <div class="mb-3">
                    <i class="bi bi-key" style="font-size: 3rem; color: var(--bs-warning);"></i>
                </div>
                <p class="mb-2">คุณแน่ใจหรือไม่ที่จะเปลี่ยนรหัสผ่านสำหรับ</p>
                <p class="fw-bold mb-3">@Model.UserName</p>
                <div class="alert alert-warning text-start">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    <strong>คำเตือน:</strong>
                    <ul class="mb-0 mt-2">
                        <li>การเปลี่ยนรหัสผ่านจะมีผลทันที</li>
                        <li>ผู้ใช้จะถูกล็อกเอาท์จากทุก device</li>
                        <li>ผู้ใช้จะต้อง login ใหม่ด้วยรหัสผ่านใหม่</li>
                    </ul>
                </div>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-lg"></i> ยกเลิก
                </button>
                <button type="button" class="btn btn-warning" onclick="submitPasswordChange()">
                    <i class="bi bi-key"></i> ยืนยันเปลี่ยนรหัสผ่าน
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        // Toast Auto-hide
        document.addEventListener('DOMContentLoaded', function() {
            const toasts = document.querySelectorAll('.toast-notification');
            toasts.forEach(toast => {
                setTimeout(() => {
                    toast.classList.add('toast-show');
                }, 100);

                setTimeout(() => {
                    toast.classList.remove('toast-show');
                    setTimeout(() => toast.remove(), 300);
                }, 5000);
            });
        });

        // Password Strength Checker
        var newPasswordInput = document.querySelector('input[name="NewPassword"]');
        if (newPasswordInput) {
            newPasswordInput.addEventListener('input', function() {
                var password = this.value;
                var strength = 0;
                var checks = {
                    length: password.length >= 8,
                    lowercase: /[a-z]/.test(password),
                    uppercase: /[A-Z]/.test(password),
                    number: /[0-9]/.test(password),
                    special: /[!@@#$%^&*(),.?":{}|<>]/.test(password)
                };

                // Count strength
                for (var key in checks) {
                    if (checks[key]) strength++;
                }

                // Update visual indicators
                updateCheckmark('lengthCheck', checks.length);
                updateCheckmark('lowercaseCheck', checks.lowercase);
                updateCheckmark('uppercaseCheck', checks.uppercase);
                updateCheckmark('numberCheck', checks.number);
                updateCheckmark('specialCheck', checks.special);

                // Update strength bar
                var strengthBar = document.getElementById('strengthBar');
                var strengthText = document.getElementById('strengthText');
                var percentage = (strength / 5) * 100;

                strengthBar.style.width = percentage + '%';

                if (strength === 0) {
                    strengthBar.className = 'strength-fill';
                    strengthText.textContent = 'กรุณากรอกรหัสผ่าน';
                    strengthText.className = 'text-muted small mb-0';
                } else if (strength <= 2) {
                    strengthBar.className = 'strength-fill strength-weak';
                    strengthText.textContent = 'รหัสผ่านอ่อนแอ';
                    strengthText.className = 'text-danger small mb-0';
                } else if (strength <= 3) {
                    strengthBar.className = 'strength-fill strength-medium';
                    strengthText.textContent = 'รหัสผ่านปานกลาง';
                    strengthText.className = 'text-warning small mb-0';
                } else if (strength <= 4) {
                    strengthBar.className = 'strength-fill strength-good';
                    strengthText.textContent = 'รหัสผ่านดี';
                    strengthText.className = 'text-info small mb-0';
                } else {
                    strengthBar.className = 'strength-fill strength-strong';
                    strengthText.textContent = 'รหัสผ่านแข็งแกร่งมาก';
                    strengthText.className = 'text-success small mb-0';
                }
            });
        }

        function updateCheckmark(id, isValid) {
            var element = document.getElementById(id);
            if (element) {
                if (isValid) {
                    element.className = 'small text-success';
                    element.innerHTML = '<i class="bi bi-check-circle-fill me-1"></i>' + element.textContent.replace(/[✓✗] /, '');
                } else {
                    element.className = 'small text-muted';
                    element.innerHTML = '<i class="bi bi-circle me-1"></i>' + element.textContent.replace(/[✓✗] /, '');
                }
            }
        }

        // Password match validation
        var confirmPasswordInput = document.querySelector('input[name="ConfirmPassword"]');
        if (confirmPasswordInput) {
            confirmPasswordInput.addEventListener('input', function() {
                var passwordInput = document.querySelector('input[name="NewPassword"]');
                var password = passwordInput ? passwordInput.value : '';
                var confirm = this.value;

                if (confirm && password !== confirm) {
                    this.classList.add('is-invalid');
                } else {
                    this.classList.remove('is-invalid');
                }
            });
        }

        // Confirm change password
        function confirmChangePassword() {
            var form = document.querySelector('form');
            if (!form || !form.checkValidity()) {
                if (form) form.reportValidity();
                return;
            }

            var passwordInput = document.querySelector('input[name="NewPassword"]');
            var confirmInput = document.querySelector('input[name="ConfirmPassword"]');
            
            var password = passwordInput ? passwordInput.value : '';
            var confirm = confirmInput ? confirmInput.value : '';

            if (password !== confirm) {
                alert('รหัสผ่านไม่ตรงกัน');
                return;
            }

            var modal = new bootstrap.Modal(document.getElementById('changePasswordModal'));
            modal.show();
        }

        function submitPasswordChange() {
            var form = document.querySelector('form');
            if (form) {
                form.submit();
            }
        }
    </script>
}

<style>
    .required::after {
        content: " *";
        color: red;
    }

    /* Toast Notifications */
    .toast-notification {
        position: fixed;
        top: 20px;
        right: 20px;
        min-width: 300px;
        padding: 1rem 1.5rem;
        background: white;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        display: flex;
        align-items: center;
        gap: 12px;
        z-index: 9999;
        opacity: 0;
        transform: translateX(100px);
        transition: all 0.3s ease;
    }

    .toast-notification.toast-show {
        opacity: 1;
        transform: translateX(0);
    }

    .toast-notification i {
        font-size: 1.25rem;
    }

    .toast-success {
        border-left: 4px solid #10b981;
    }

    .toast-success i {
        color: #10b981;
    }

    .toast-error {
        border-left: 4px solid #ef4444;
    }

    .toast-error i {
        color: #ef4444;
    }

    .toast-info {
        border-left: 4px solid #3b82f6;
    }

    .toast-info i {
        color: #3b82f6;
    }

    .toast-warning {
        border-left: 4px solid #f59e0b;
    }

    .toast-warning i {
        color: #f59e0b;
    }

    /* Password Strength Bar */
    .password-strength-bar {
        width: 100%;
        height: 8px;
        background: #e5e7eb;
        border-radius: 4px;
        overflow: hidden;
    }

    .strength-fill {
        height: 100%;
        width: 0;
        transition: all 0.3s ease;
        background: #9ca3af;
    }

    .strength-weak {
        background: #ef4444;
    }

    .strength-medium {
        background: #f59e0b;
    }

    .strength-good {
        background: #3b82f6;
    }

    .strength-strong {
        background: #10b981;
    }
</style>
