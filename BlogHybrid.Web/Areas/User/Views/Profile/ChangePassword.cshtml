@model BlogHybrid.Web.Areas.User.Models.ChangePasswordViewModel
@{
    ViewData["Title"] = "เปลี่ยนรหัสผ่าน";
}

<div class="change-password-container">
    <div class="change-password-card">
        <!-- Header -->
        <div class="card-header">
            <div class="header-icon">
                <i class="bi bi-shield-lock"></i>
            </div>
            <div>
                <h1 class="card-title">เปลี่ยนรหัสผ่าน</h1>
                <p class="card-subtitle">อัปเดตรหัสผ่านของคุณเพื่อความปลอดภัย</p>
            </div>
        </div>

        <!-- Form -->
        <form asp-action="ChangePassword" method="post" class="password-form" id="changePasswordForm">
            @Html.AntiForgeryToken()

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    <i class="bi bi-exclamation-triangle-fill"></i>
                    <div>
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <div>@error.ErrorMessage</div>
                        }
                    </div>
                </div>
            }

            <!-- Current Password -->
            <div class="form-group">
                <label asp-for="CurrentPassword" class="form-label">
                    <i class="bi bi-lock"></i> รหัสผ่านปัจจุบัน
                </label>
                <div class="password-input-wrapper">
                    <input asp-for="CurrentPassword"
                           type="password"
                           class="form-control"
                           id="currentPassword"
                           placeholder="กรอกรหัสผ่านปัจจุบัน"
                           autocomplete="current-password"
                           required />
                    <button type="button" class="password-toggle" onclick="togglePasswordField('currentPassword', this)">
                        <i class="bi bi-eye"></i>
                    </button>
                </div>
                <span asp-validation-for="CurrentPassword" class="text-danger"></span>
            </div>

            <div class="form-divider"></div>

            <!-- New Password -->
            <div class="form-group">
                <label asp-for="NewPassword" class="form-label">
                    <i class="bi bi-lock-fill"></i> รหัสผ่านใหม่
                </label>
                <div class="password-input-wrapper">
                    <input asp-for="NewPassword"
                           type="password"
                           class="form-control"
                           id="newPassword"
                           placeholder="กรอกรหัสผ่านใหม่ (อย่างน้อย 6 ตัวอักษร)"
                           autocomplete="new-password"
                           required
                           minlength="6" />
                    <button type="button" class="password-toggle" onclick="togglePasswordField('newPassword', this)">
                        <i class="bi bi-eye"></i>
                    </button>
                </div>
                <span asp-validation-for="NewPassword" class="text-danger"></span>

                <!-- Password Strength Indicator -->
                <div class="password-strength" id="passwordStrength">
                    <div class="strength-bar">
                        <div class="strength-bar-fill" id="strengthBar"></div>
                    </div>
                    <p class="strength-text" id="strengthText"></p>
                </div>
            </div>

            <!-- Confirm Password -->
            <div class="form-group">
                <label asp-for="ConfirmPassword" class="form-label">
                    <i class="bi bi-check-circle"></i> ยืนยันรหัสผ่านใหม่
                </label>
                <div class="password-input-wrapper">
                    <input asp-for="ConfirmPassword"
                           type="password"
                           class="form-control"
                           id="confirmPassword"
                           placeholder="กรอกรหัสผ่านใหม่อีกครั้ง"
                           autocomplete="new-password"
                           required />
                    <button type="button" class="password-toggle" onclick="togglePasswordField('confirmPassword', this)">
                        <i class="bi bi-eye"></i>
                    </button>
                </div>
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>

            <!-- Security Tips -->
            <div class="security-tips">
                <h3><i class="bi bi-info-circle"></i> คำแนะนำความปลอดภัย</h3>
                <ul>
                    <li>ใช้รหัสผ่านที่มีความยาวอย่างน้อย 8 ตัวอักษร</li>
                    <li>ผสมผสานตัวพิมพ์ใหญ่ พิมพ์เล็ก ตัวเลข และสัญลักษณ์</li>
                    <li>อย่าใช้รหัสผ่านเดียวกันกับเว็บไซต์อื่น</li>
                    <li>เปลี่ยนรหัสผ่านเป็นประจำทุก 3-6 เดือน</li>
                </ul>
            </div>

            <!-- Actions -->
            <div class="form-actions">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-check-circle"></i> บันทึกรหัสผ่านใหม่
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="bi bi-x-circle"></i> ยกเลิก
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Toggle Password Visibility
        function togglePasswordField(inputId, button) {
            const input = document.getElementById(inputId);
            const icon = button.querySelector('i');

            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('bi-eye');
                icon.classList.add('bi-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('bi-eye-slash');
                icon.classList.add('bi-eye');
            }
        }

        // Password Strength Checker
        const newPasswordInput = document.getElementById('newPassword');
        const strengthBar = document.getElementById('strengthBar');
        const strengthText = document.getElementById('strengthText');

        newPasswordInput?.addEventListener('input', function() {
            const password = this.value;
            const strength = calculatePasswordStrength(password);
            updateStrengthIndicator(strength);
        });

        function calculatePasswordStrength(password) {
            let strength = 0;

            if (password.length >= 6) strength += 20;
            if (password.length >= 8) strength += 20;
            if (password.length >= 12) strength += 10;
            if (/[a-z]/.test(password)) strength += 10;
            if (/[A-Z]/.test(password)) strength += 15;
            if (/[0-9]/.test(password)) strength += 15;
            if (/[^a-zA-Z0-9]/.test(password)) strength += 10;

            return Math.min(strength, 100);
        }

        function updateStrengthIndicator(strength) {
            strengthBar.style.width = strength + '%';

            if (strength < 30) {
                strengthBar.className = 'strength-bar-fill strength-weak';
                strengthText.textContent = 'อ่อนแอ';
                strengthText.className = 'strength-text text-danger';
            } else if (strength < 60) {
                strengthBar.className = 'strength-bar-fill strength-medium';
                strengthText.textContent = 'ปานกลาง';
                strengthText.className = 'strength-text text-warning';
            } else {
                strengthBar.className = 'strength-bar-fill strength-strong';
                strengthText.textContent = 'แข็งแรง';
                strengthText.className = 'strength-text text-success';
            }
        }

        // Confirm Password Match
        const confirmPasswordInput = document.getElementById('confirmPassword');
        confirmPasswordInput?.addEventListener('input', function() {
            if (this.value && this.value !== newPasswordInput.value) {
                this.setCustomValidity('รหัสผ่านไม่ตรงกัน');
            } else {
                this.setCustomValidity('');
            }
        });

        newPasswordInput?.addEventListener('input', function() {
            if (confirmPasswordInput.value && confirmPasswordInput.value !== this.value) {
                confirmPasswordInput.setCustomValidity('รหัสผ่านไม่ตรงกัน');
            } else {
                confirmPasswordInput.setCustomValidity('');
            }
        });
    </script>
}

<style>
    .change-password-container {
        max-width: 600px;
        margin: 2rem auto;
        padding: 0 1rem;
    }

    .change-password-card {
        background: var(--card-bg-color);
        border-radius: 16px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .card-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 2rem;
        display: flex;
        align-items: center;
        gap: 1.5rem;
    }

    [data-theme="dark"] .card-header {
        background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
    }

    .header-icon {
        width: 60px;
        height: 60px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        flex-shrink: 0;
    }

    .card-title {
        font-size: 1.75rem;
        font-weight: 700;
        margin: 0 0 0.5rem 0;
    }

    .card-subtitle {
        margin: 0;
        opacity: 0.9;
    }

    .password-form {
        padding: 2rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        display: block;
        font-weight: 600;
        color: var(--main-text-color);
        margin-bottom: 0.5rem;
        font-size: 0.95rem;
    }

        .form-label i {
            color: var(--primary-color);
            margin-right: 0.5rem;
        }

    .password-input-wrapper {
        position: relative;
    }

    .form-control {
        width: 100%;
        padding: 0.75rem 3rem 0.75rem 1rem;
        border: 2px solid var(--border-color);
        border-radius: 10px;
        background: var(--main-bg-color);
        color: var(--main-text-color);
        font-size: 1rem;
        transition: all 0.3s ease;
    }

        .form-control:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

    .password-toggle {
        position: absolute;
        right: 1rem;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        color: var(--secondary-text-color);
        cursor: pointer;
        font-size: 1.2rem;
        transition: color 0.2s ease;
    }

        .password-toggle:hover {
            color: var(--primary-color);
        }

    .form-divider {
        height: 1px;
        background: var(--border-color);
        margin: 2rem 0;
    }

    /* Password Strength */
    .password-strength {
        margin-top: 0.75rem;
    }

    .strength-bar {
        height: 6px;
        background: var(--border-color);
        border-radius: 3px;
        overflow: hidden;
        margin-bottom: 0.5rem;
    }

    .strength-bar-fill {
        height: 100%;
        transition: all 0.3s ease;
        border-radius: 3px;
    }

    .strength-weak {
        width: 33%;
        background: #ef4444;
    }

    .strength-medium {
        width: 66%;
        background: #f59e0b;
    }

    .strength-strong {
        width: 100%;
        background: #10b981;
    }

    .strength-text {
        font-size: 0.85rem;
        font-weight: 600;
        margin: 0;
    }

    /* Security Tips */
    .security-tips {
        background: var(--hover-bg-color);
        border-left: 4px solid var(--primary-color);
        border-radius: 8px;
        padding: 1.5rem;
        margin: 2rem 0;
    }

        .security-tips h3 {
            font-size: 1rem;
            font-weight: 600;
            color: var(--main-text-color);
            margin: 0 0 1rem 0;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .security-tips ul {
            margin: 0;
            padding-left: 1.5rem;
            color: var(--secondary-text-color);
        }

        .security-tips li {
            margin-bottom: 0.5rem;
            line-height: 1.6;
        }

    /* Form Actions */
    .form-actions {
        display: flex;
        gap: 1rem;
        margin-top: 2rem;
    }

    .btn {
        flex: 1;
        padding: 0.875rem 1.5rem;
        border-radius: 10px;
        font-weight: 600;
        font-size: 1rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        border: none;
    }

    .btn-primary {
        background: var(--primary-color);
        color: white;
    }

        .btn-primary:hover {
            background: var(--primary-hover);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
        }

    .btn-secondary {
        background: transparent;
        border: 2px solid var(--border-color);
        color: var(--main-text-color);
    }

        .btn-secondary:hover {
            background: var(--hover-bg-color);
            border-color: var(--primary-color);
            color: var(--primary-color);
        }

    /* Alert */
    .alert {
        padding: 1rem;
        border-radius: 8px;
        margin-bottom: 1.5rem;
        display: flex;
        gap: 0.75rem;
        align-items: start;
    }

    .alert-danger {
        background: #fee;
        border: 1px solid #fcc;
        color: #c33;
    }

    [data-theme="dark"] .alert-danger {
        background: rgba(239, 68, 68, 0.1);
        border-color: rgba(239, 68, 68, 0.3);
        color: #ff6b7a;
    }

    .alert i {
        font-size: 1.25rem;
        flex-shrink: 0;
        margin-top: 0.125rem;
    }

    .text-danger {
        color: #ef4444;
        font-size: 0.875rem;
        display: block;
        margin-top: 0.5rem;
    }

    /* Responsive */
    @@media (max-width: 576px) {
        .card-header

    {
        flex-direction: column;
        text-align: center;
    }

    .form-actions {
        flex-direction: column;
    }

    .btn {
        width: 100%;
    }

    }
</style>