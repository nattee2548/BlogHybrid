@model List<BlogHybrid.Application.DTOs.Community.CommunityDto>

@{
    ViewData["Title"] = "‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô";
    var currentFilter = ViewBag.CurrentFilter as string;
}

<div class="my-communities-container">
    <!-- Header -->
    <div class="page-header">
        <div class="header-content">
            <div class="header-title">
                <h1><i class="bi bi-collection"></i> ‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</h1>
                <p class="header-description">‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á</p>
            </div>
            <a href="/create-community" class="btn-create-new">
                <i class="bi bi-plus-lg"></i> ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡πÉ‡∏´‡∏°‡πà
            </a>
        </div>
    </div>
    <div class="filter-section">
        <div class="filter-tabs">
            <a href="@Url.Action("MyCommunities")"
               class="filter-tab @(string.IsNullOrEmpty(currentFilter) ? "active" : "")">
                <i class="bi bi-grid-fill"></i>
                <span>‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
                <span class="count-badge">@ViewBag.TotalCommunities</span>
            </a>
            <a href="@Url.Action("MyCommunities", new { filter = "owned" })"
               class="filter-tab @(currentFilter == "owned" ? "active" : "")">
                <i class="bi bi-star-fill"></i>
                <span>‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</span>
                <span class="count-badge">@ViewBag.OwnedCount</span>
            </a>
            <a href="@Url.Action("MyCommunities", new { filter = "joined" })"
               class="filter-tab @(currentFilter == "joined" ? "active" : "")">
                <i class="bi bi-check-circle-fill"></i>
                <span>‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÅ‡∏•‡πâ‡∏ß</span>
                <span class="count-badge">@ViewBag.JoinedCount</span>
            </a>
            <a href="@Url.Action("MyCommunities", new { filter = "pending" })"
               class="filter-tab @(currentFilter == "pending" ? "active" : "")">
                <i class="bi bi-clock-fill"></i>
                <span>‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</span>
                @if (ViewBag.PendingCount > 0)
                {
                    <span class="count-badge pending">@ViewBag.PendingCount</span>
                }
            </a>
            @if (ViewBag.BannedCount > 0)
            {
                <a href="@Url.Action("MyCommunities", new { filter = "banned" })"
                   class="filter-tab @(currentFilter == "banned" ? "active" : "")">
                    <i class="bi bi-slash-circle-fill"></i>
                    <span>‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô</span>
                    <span class="count-badge banned">@ViewBag.BannedCount</span>
                </a>
            }
        </div>
    </div>

    <!-- Communities Grid -->
    @if (Model == null || !Model.Any())
    {
        <div class="empty-state">
            <div class="empty-icon">
                <i class="bi bi-collection"></i>
            </div>
            <h3>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∏‡∏°‡∏ä‡∏ô</h3>
            <p>‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∏‡∏°‡∏ä‡∏ô ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏¢!</p>
            <a href="/create-community" class="btn-create-first">
                <i class="bi bi-plus-lg"></i> ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡πÅ‡∏£‡∏Å
            </a>
        </div>
    }
    else
    {
        <div class="communities-grid">
            @foreach (var community in Model)
            {
                <div class="community-card">
                    <!-- Cover Image -->
                    <div class="community-cover"
                         style="background-image: url('@(string.IsNullOrEmpty(community.CoverImageUrl) ? "/images/default-cover.jpg" : community.CoverImageUrl)')">
                    </div>

                    <!-- Avatar -->
                    <div class="community-avatar-wrapper">
                        @if (!string.IsNullOrEmpty(community.ImageUrl))
                        {
                            <img src="@community.ImageUrl" alt="@community.Name" class="community-avatar">
                        }
                        else
                        {
                            <div class="community-avatar-placeholder">
                                <i class="bi bi-people-fill"></i>
                            </div>
                        }
                    </div>

                    <div class="card-content">
                        <!-- Community Info -->
                        <div class="community-info">
                            <div>
                                <h3 class="community-title">@community.Name</h3>
                                <p class="community-meta">
                                    <span>
                                        <i class="bi bi-calendar-plus"></i>
                                        ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ @community.CreatedAt.ToString("dd/MM/yyyy")
                                    </span>
                                    @if (community.Categories != null && community.Categories.Any())
                                    {
                                        <div class="category-badges" style="margin-top: 0.5rem;">
                                            @foreach (var category in community.Categories.Take(3))
                                            {
                                                <span class="category-badge" style="background-color: @(category.CategoryColor)15; color: @category.CategoryColor; border: 1px solid @(category.CategoryColor)40;">
                                                    <i class="bi bi-tag-fill"></i> @category.CategoryName
                                                </span>
                                            }
                                            @if (community.Categories.Count > 3)
                                            {
                                                <span class="category-badge-more">+@(community.Categories.Count - 3)</span>
                                            }
                                        </div>
                                    }
                                </p>
                            </div>
                        </div>

                        <!-- Description -->
                        @if (!string.IsNullOrEmpty(community.Description))
                        {
                            <p class="community-description">@community.Description</p>
                        }

                        <!-- Stats -->
                        <div class="community-stats">
                            <div class="stat">
                                <i class="bi bi-people"></i>
                                <span>@community.MemberCount ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</span>
                            </div>
                            <div class="stat">
                                <i class="bi bi-file-text"></i>
                                <span>@community.PostCount ‡πÇ‡∏û‡∏™‡∏ï‡πå</span>
                            </div>
                        </div>

                        <!-- Badges - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ -->
                        <div class="community-badges">
                            @if (community.IsPrivate)
                            {
                                <span class="badge badge-private">
                                    <i class="bi bi-lock-fill"></i> ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
                                </span>
                            }
                            @if (community.IsActive)
                            {
                                <span class="badge badge-active">
                                    <i class="bi bi-check-circle-fill"></i> Active
                                </span>
                            }
                            else
                            {
                                <span class="badge badge-inactive">
                                    <i class="bi bi-pause-circle"></i> ‡πÑ‡∏°‡πà Active
                                </span>
                            }
                            
                            @* üî• ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà *@
                            @if (community.MemberStatus == BlogHybrid.Domain.Enums.CommunityMemberStatus.Creator || community.IsCreator)
                            {
                                <span class="badge badge-creator">
                                    <i class="bi bi-star-fill"></i> ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á
                                </span>
                            }
                            else if (community.MemberStatus == BlogHybrid.Domain.Enums.CommunityMemberStatus.Approved)
                            {
                                <span class="badge badge-member">
                                    <i class="bi bi-check-circle-fill"></i> ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
                                </span>
                            }
                            else if (community.MemberStatus == BlogHybrid.Domain.Enums.CommunityMemberStatus.Pending)
                            {
                                <span class="badge badge-pending">
                                    <i class="bi bi-clock-fill"></i> ‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
                                </span>
                            }
                            else if (community.MemberStatus == BlogHybrid.Domain.Enums.CommunityMemberStatus.Banned)
                            {
                                <span class="badge badge-banned">
                                    <i class="bi bi-slash-circle-fill"></i> ‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô
                                </span>
                            }
                            
                            @* ‡πÅ‡∏™‡∏î‡∏á Role badge ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Moderator/Admin (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á) *@
                            @if (community.MemberStatus != BlogHybrid.Domain.Enums.CommunityMemberStatus.Creator && 
                                 !community.IsCreator &&
                                 community.MemberRole.HasValue)
                            {
                                @if (community.MemberRole == BlogHybrid.Domain.Enums.CommunityRole.Admin)
                                {
                                    <span class="badge badge-role-admin">
                                        <i class="bi bi-shield-fill-check"></i> Admin
                                    </span>
                                }
                                else if (community.MemberRole == BlogHybrid.Domain.Enums.CommunityRole.Moderator)
                                {
                                    <span class="badge badge-role-moderator">
                                        <i class="bi bi-shield-fill"></i> Moderator
                                    </span>
                                }
                            }
                        </div>

                        <!-- Actions -->
                        <div class="card-actions">
                            <a asp-controller="Community"
                               asp-action="Details"
                               asp-route-communitySlug="@community.Slug"
                               class="btn-action btn-view">
                                <i class="bi bi-eye"></i> ‡∏î‡∏π‡∏ä‡∏∏‡∏°‡∏ä‡∏ô
                            </a>

                            @* ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á *@
                            @if (community.MemberStatus == BlogHybrid.Domain.Enums.CommunityMemberStatus.Creator || community.IsCreator)
                            {
                                <!-- Dropdown Menu -->
                                <div class="dropdown-wrapper">
                                    <button class="btn-action btn-manage dropdown-toggle" onclick="toggleDropdown(@community.Id)">
                                        <i class="bi bi-gear"></i> ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£
                                        <i class="bi bi-chevron-down dropdown-icon"></i>
                                    </button>
                                    <div class="dropdown-menu" id="dropdown-@community.Id">
                                        <a asp-controller="Community"
                                           asp-action="Edit"
                                           asp-route-id="@community.Id"
                                           class="dropdown-item">
                                            <i class="bi bi-pencil"></i> ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∏‡∏°‡∏ä‡∏ô
                                        </a>
                                        <a asp-controller="Community"
                                           asp-action="ManageMembers"
                                           asp-route-id="@community.Id"
                                           class="dropdown-item">
                                            <i class="bi bi-people"></i> ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
                                        </a>
                                        <div class="dropdown-divider"></div>
                                        <a href="#" class="dropdown-item text-danger">
                                            <i class="bi bi-trash"></i> ‡∏•‡∏ö‡∏ä‡∏∏‡∏°‡∏ä‡∏ô
                                        </a>
                                    </div>
                                </div>
                            }
                            else if (community.MemberStatus == BlogHybrid.Domain.Enums.CommunityMemberStatus.Pending)
                            {
                                <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏Ç‡∏≠ -->
                                <form asp-controller="Community"
                                      asp-action="Leave"
                                      asp-route-id="@community.Id"
                                      method="post"
                                      style="display: inline;"
                                      id="cancelForm-@community.Id">
                                    @Html.AntiForgeryToken()
                                    <button type="button" 
                                            class="btn-action btn-cancel"
                                            onclick="confirmCancelRequest(@community.Id, '@community.Name')">
                                        <i class="bi bi-x-circle"></i> ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏Ç‡∏≠
                                    </button>
                                </form>
                            }
                            else if (community.MemberStatus == BlogHybrid.Domain.Enums.CommunityMemberStatus.Approved)
                            {
                                <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡∏∏‡∏°‡∏ä‡∏ô -->
                                <form asp-controller="Community"
                                      asp-action="Leave"
                                      asp-route-id="@community.Id"
                                      method="post"
                                      style="display: inline;"
                                      id="leaveForm-@community.Id">
                                    @Html.AntiForgeryToken()
                                    <button type="button" 
                                            class="btn-action btn-leave"
                                            onclick="confirmLeaveCommunity(@community.Id, '@community.Name')">
                                        <i class="bi bi-box-arrow-right"></i> ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡∏∏‡∏°‡∏ä‡∏ô
                                    </button>
                                </form>
                            }
                            else if (community.MemberStatus == BlogHybrid.Domain.Enums.CommunityMemberStatus.Banned)
                            {
                                <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô (‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô) -->
                                <button class="btn-action btn-banned" disabled>
                                    <i class="bi bi-slash-circle"></i> ‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô
                                </button>
                            }
                        </div>

                        <!-- Card Footer -->
                        <div class="card-footer">
                            <small>
                                <i class="bi bi-clock"></i>
                                ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î @community.UpdatedAt.ToString("dd/MM/yyyy HH:mm")
                            </small>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<style>
    /* Container */
    .my-communities-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 2rem 1rem;
    }

    /* Page Header */
    .page-header {
        margin-bottom: 2rem;
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .header-title h1 {
        font-size: 2rem;
        font-weight: 700;
        color: var(--text-primary, #1a1a1a);
        margin: 0 0 0.5rem 0;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

        .header-title h1 i {
            color: var(--primary, #ff4500);
        }

    .header-description {
        color: var(--text-secondary, #666);
        margin: 0;
        font-size: 1rem;
    }

    .btn-create-new {
        padding: 0.875rem 1.75rem;
        background: var(--primary, #ff4500);
        color: white;
        border-radius: 8px;
        text-decoration: none;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.2s;
    }

        .btn-create-new:hover {
            background: var(--primary-hover, #e03d00);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(255, 69, 0, 0.3);
            color: white;
        }

    /* Communities Grid */
    .communities-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 1.5rem;
    }

    /* Community Card */
    .community-card {
        background: var(--card-bg, #ffffff);
        border: 1px solid var(--border-primary, #e5e7eb);
        border-radius: 16px;
        overflow: hidden;
        transition: all 0.3s;
        position: relative;
        z-index: 1;
    }

        .community-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 12px 32px rgba(0, 0, 0, 0.1);
        }

    .community-cover {
        height: 120px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        background-size: cover;
        background-position: center;
    }

    .community-avatar-wrapper {
        padding: 0 1.5rem;
        margin-top: -40px;
        position: relative;
        z-index: 2;
    }

    .community-avatar,
    .community-avatar-placeholder {
        width: 80px;
        height: 80px;
        border-radius: 16px;
        border: 4px solid var(--card-bg, #ffffff);
        background: var(--bg-secondary, #f3f4f6);
    }

    .community-avatar {
        object-fit: cover;
    }

    .community-avatar-placeholder {
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--text-secondary, #666);
        font-size: 2rem;
    }

    .card-content {
        padding: 1rem 1.5rem 1.5rem;
    }

    /* Community Info */
    .community-info {
        margin-bottom: 1rem;
    }

    .community-title {
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--text-primary, #1a1a1a);
        margin: 0 0 0.5rem 0;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .community-meta {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        font-size: 0.875rem;
        color: var(--text-secondary, #666);
        margin: 0;
    }

        .community-meta span {
            display: flex;
            align-items: center;
            gap: 0.375rem;
        }

    .category-badges {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-top: 0.5rem;
    }

    .category-badge {
        padding: 0.25rem 0.75rem;
        border-radius: 9999px;
        font-size: 0.7rem;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 0.375rem;
        transition: all 0.2s;
    }

        .category-badge:hover {
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .category-badge i {
            font-size: 0.65rem;
        }

    .category-badge-more {
        padding: 0.25rem 0.5rem;
        border-radius: 9999px;
        font-size: 0.7rem;
        font-weight: 600;
        background: var(--bg-secondary, #f3f4f6);
        color: var(--text-secondary, #666);
        border: 1px solid var(--border-primary, #e5e7eb);
    }

    .community-description {
        color: var(--text-secondary, #666);
        font-size: 0.875rem;
        line-height: 1.6;
        margin: 0 0 1rem 0;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    /* Stats */
    .community-stats {
        display: flex;
        gap: 1.5rem;
        padding: 0.75rem 0;
        margin-bottom: 0.75rem;
        border-top: 1px solid var(--border-primary, #e5e7eb);
        border-bottom: 1px solid var(--border-primary, #e5e7eb);
    }

    .stat {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.8125rem;
        color: var(--text-secondary, #666);
    }

        .stat i {
            color: var(--text-secondary, #666);
        }

    /* Badges */
    .community-badges {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-bottom: 1rem;
    }

    .badge {
        padding: 0.25rem 0.75rem;
        border-radius: 9999px;
        font-size: 0.75rem;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 0.375rem;
    }

    .badge-private {
        background: #fef3c7;
        color: #92400e;
    }

    .badge-active {
        background: #d1fae5;
        color: #065f46;
    }

    .badge-inactive {
        background: #fee2e2;
        color: #991b1b;
    }

    .badge-creator {
        background: #dbeafe;
        color: #1e40af;
    }

    /* Actions */
    .card-actions {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 0.75rem;
        margin-bottom: 1rem;
    }

    .btn-action {
        padding: 0.625rem 1rem;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        font-size: 0.8125rem;
        cursor: pointer;
        transition: all 0.2s;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        text-decoration: none;
    }

    .btn-view {
        background: var(--primary, #ff4500);
        color: white;
    }

        .btn-view:hover {
            background: var(--primary-hover, #e03d00);
            color: white;
        }

    .btn-manage {
        background: var(--bg-secondary, #f3f4f6);
        color: var(--text-primary, #1a1a1a);
    }

        .btn-manage:hover {
            background: var(--bg-hover, #e5e7eb);
        }

    /* Card Footer */
    .card-footer {
        padding-top: 0.75rem;
        border-top: 1px solid var(--border-primary, #e5e7eb);
    }

        .card-footer small {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.75rem;
            color: var(--text-secondary, #666);
        }

    /* Responsive */
    @@media (max-width: 991px) {
        .communities-grid {
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        }
    }

    @@media (max-width: 767px) {
        .my-communities-container {
            padding: 1rem;
        }

        .header-content {
            flex-direction: column;
            align-items: flex-start;
        }

        .btn-create-new {
            width: 100%;
            justify-content: center;
        }

        .communities-grid {
            grid-template-columns: 1fr;
        }
    }

    /* Filter Section */
    .filter-section {
        background: var(--card-bg, #ffffff);
        border: 1px solid var(--border-primary, #e5e7eb);
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 2rem;
    }

    .filter-tabs {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    .filter-tab {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1.25rem;
        border: 2px solid var(--border-primary, #e5e7eb);
        border-radius: 8px;
        background: var(--bg-secondary, #f3f4f6);
        color: var(--text-primary, #1a1a1a);
        text-decoration: none;
        font-weight: 600;
        font-size: 0.875rem;
        transition: all 0.2s;
    }

        .filter-tab:hover {
            background: var(--bg-hover, #e5e7eb);
            border-color: var(--primary, #ff4500);
            color: var(--primary, #ff4500);
        }

        .filter-tab.active {
            background: var(--primary, #ff4500);
            border-color: var(--primary, #ff4500);
            color: white;
        }

        .filter-tab i {
            font-size: 1rem;
        }

    .count-badge {
        padding: 0.125rem 0.5rem;
        border-radius: 9999px;
        background: rgba(0, 0, 0, 0.1);
        font-size: 0.75rem;
        font-weight: 700;
        min-width: 24px;
        text-align: center;
    }

    .filter-tab.active .count-badge {
        background: rgba(255, 255, 255, 0.25);
        color: white;
    }

    .count-badge.pending {
        background: #fef3c7;
        color: #92400e;
    }

    .count-badge.banned {
        background: #fee2e2;
        color: #991b1b;
    }

    /* Badge Styles */
    .badge-member {
        background: #d1fae5;
        color: #065f46;
    }

    .badge-pending {
        background: #fef3c7;
        color: #92400e;
    }

    .badge-banned {
        background: #fee2e2;
        color: #991b1b;
    }

    .badge-role-moderator {
        background: #dbeafe;
        color: #1e40af;
    }

    .badge-role-admin {
        background: #fef3c7;
        color: #92400e;
    }

    /* Action Buttons */
    .btn-cancel {
        background: #fef3c7;
        color: #92400e;
    }

        .btn-cancel:hover {
            background: #fbbf24;
            color: white;
        }

    .btn-leave {
        background: var(--bg-secondary, #f3f4f6);
        color: var(--text-primary, #1a1a1a);
    }

        .btn-leave:hover {
            background: #fee2e2;
            color: #991b1b;
        }

    .btn-banned {
        background: #fee2e2;
        color: #991b1b;
        cursor: not-allowed;
        opacity: 0.6;
    }

    /* Dropdown */
    .dropdown-wrapper {
        position: relative;
    }

    .dropdown-toggle {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .dropdown-icon {
        font-size: 0.75rem;
        transition: transform 0.2s;
    }

    .dropdown-toggle.active .dropdown-icon {
        transform: rotate(180deg);
    }

    .dropdown-menu {
        position: absolute;
        top: calc(100% + 0.5rem);
        right: 0;
        min-width: 200px;
        background: var(--card-bg, #ffffff);
        border: 1px solid var(--border-primary, #e5e7eb);
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        padding: 0.5rem;
        z-index: 1000;
        opacity: 0;
        visibility: hidden;
        transform: translateY(-10px);
        transition: all 0.2s;
    }

        .dropdown-menu.show {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
        }

    .dropdown-item {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 0.75rem 1rem;
        color: var(--text-primary, #1a1a1a);
        text-decoration: none;
        border-radius: 6px;
        font-size: 0.875rem;
        transition: all 0.2s;
    }

        .dropdown-item:hover {
            background: var(--bg-hover, #f3f4f6);
        }

        .dropdown-item.text-danger {
            color: #dc2626;
        }

            .dropdown-item.text-danger:hover {
                background: #fee2e2;
            }

        .dropdown-item i {
            width: 1rem;
        }

    .dropdown-divider {
        height: 1px;
        background: var(--border-primary, #e5e7eb);
        margin: 0.5rem 0;
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
    }

    .empty-icon {
        font-size: 5rem;
        color: var(--text-secondary, #666);
        opacity: 0.3;
        margin-bottom: 1.5rem;
    }

    .empty-state h3 {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--text-primary, #1a1a1a);
        margin: 0 0 0.75rem 0;
    }

    .empty-state p {
        color: var(--text-secondary, #666);
        margin-bottom: 2rem;
    }

    .btn-create-first {
        padding: 0.875rem 2rem;
        background: var(--primary, #ff4500);
        color: white;
        border-radius: 8px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.75rem;
        transition: all 0.2s;
    }

        .btn-create-first:hover {
            background: var(--primary-hover, #e03d00);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(255, 69, 0, 0.3);
            color: white;
        }

    /* Responsive */
    @@media (max-width: 767px) {
        .filter-tabs {
            flex-direction: column;
        }

        .filter-tab {
            width: 100%;
            justify-content: space-between;
        }
    }
</style>

<script>
    function manageCommunity(communityId) {
        // TODO: Implement manage community modal or redirect
        alert('‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ä‡∏∏‡∏°‡∏ä‡∏ô ID: ' + communityId + '\n(‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï)');
    }

    function toggleDropdown(communityId) {
        const dropdown = document.getElementById(`dropdown-${communityId}`);
        const button = dropdown.previousElementSibling;
        const card = dropdown.closest('.community-card');

        // Close all other dropdowns
        document.querySelectorAll('.dropdown-menu').forEach(menu => {
            if (menu !== dropdown) {
                menu.classList.remove('show');
                menu.previousElementSibling.classList.remove('active');
                menu.closest('.community-card').style.zIndex = '1';
            }
        });

        // Toggle current dropdown
        const isShowing = dropdown.classList.toggle('show');
        button.classList.toggle('active');

        if (isShowing) {
            card.style.zIndex = '1001';
        } else {
            card.style.zIndex = '1';
        }
    }

    // Close dropdown when clicking outside
    document.addEventListener('click', function (event) {
        if (!event.target.closest('.dropdown-wrapper')) {
            document.querySelectorAll('.dropdown-menu').forEach(menu => {
                menu.classList.remove('show');
                menu.previousElementSibling.classList.remove('active');
                menu.closest('.community-card').style.zIndex = '1';
            });
        }
    });

    // ‚úÖ Confirmation Dialog ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡∏∏‡∏°‡∏ä‡∏ô
    function confirmLeaveCommunity(communityId, communityName) {
        const modal = document.createElement('div');
        modal.style.cssText = `
            position: fixed;
            inset: 0;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 99999;
            animation: fadeIn 0.2s ease;
        `;

        modal.innerHTML = `
            <div style="
                background: var(--card-bg, white);
                padding: 2rem;
                border-radius: 16px;
                max-width: 400px;
                width: 90%;
                box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
                animation: slideUp 0.3s ease;
            ">
                <div style="text-align: center; margin-bottom: 1.5rem;">
                    <div style="
                        width: 64px;
                        height: 64px;
                        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
                        border-radius: 50%;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        margin: 0 auto 1rem;
                    ">
                        <i class="bi bi-box-arrow-right" style="font-size: 2rem; color: white;"></i>
                    </div>
                    <h3 style="margin: 0 0 0.5rem 0; color: var(--text-primary);">‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡∏∏‡∏°‡∏ä‡∏ô</h3>
                    <p style="margin: 0; color: var(--text-secondary); font-size: 0.9375rem;">
                        ‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡∏∏‡∏°‡∏ä‡∏ô<br><strong>"${communityName}"</strong>?
                    </p>
                </div>
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 0.75rem;">
                    <button onclick="this.closest('[style*=fixed]').remove()" style="
                        padding: 0.75rem 1rem;
                        background: var(--bg-secondary);
                        color: var(--text-primary);
                        border: none;
                        border-radius: 8px;
                        font-weight: 600;
                        cursor: pointer;
                        transition: all 0.2s;
                    ">
                        ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                    </button>
                    <button onclick="document.getElementById('leaveForm-${communityId}').submit()" style="
                        padding: 0.75rem 1rem;
                        background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
                        color: white;
                        border: none;
                        border-radius: 8px;
                        font-weight: 600;
                        cursor: pointer;
                        transition: all 0.2s;
                    ">
                        <i class="bi bi-box-arrow-right"></i> ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡∏∏‡∏°‡∏ä‡∏ô
                    </button>
                </div>
            </div>
        `;

        document.body.appendChild(modal);
    }

    // ‚úÖ Confirmation Dialog ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°
    function confirmCancelRequest(communityId, communityName) {
        const modal = document.createElement('div');
        modal.style.cssText = `
            position: fixed;
            inset: 0;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 99999;
            animation: fadeIn 0.2s ease;
        `;

        modal.innerHTML = `
            <div style="
                background: var(--card-bg, white);
                padding: 2rem;
                border-radius: 16px;
                max-width: 400px;
                width: 90%;
                box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
                animation: slideUp 0.3s ease;
            ">
                <div style="text-align: center; margin-bottom: 1.5rem;">
                    <div style="
                        width: 64px;
                        height: 64px;
                        background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
                        border-radius: 50%;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        margin: 0 auto 1rem;
                    ">
                        <i class="bi bi-x-circle" style="font-size: 2rem; color: white;"></i>
                    </div>
                    <h3 style="margin: 0 0 0.5rem 0; color: var(--text-primary);">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏Ç‡∏≠</h3>
                    <p style="margin: 0; color: var(--text-secondary); font-size: 0.9375rem;">
                        ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏ä‡∏∏‡∏°‡∏ä‡∏ô<br><strong>"${communityName}"</strong> ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?
                    </p>
                </div>
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 0.75rem;">
                    <button onclick="this.closest('[style*=fixed]').remove()" style="
                        padding: 0.75rem 1rem;
                        background: var(--bg-secondary);
                        color: var(--text-primary);
                        border: none;
                        border-radius: 8px;
                        font-weight: 600;
                        cursor: pointer;
                        transition: all 0.2s;
                    ">
                        ‡πÑ‡∏°‡πà‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                    </button>
                    <button onclick="document.getElementById('cancelForm-${communityId}').submit()" style="
                        padding: 0.75rem 1rem;
                        background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
                        color: white;
                        border: none;
                        border-radius: 8px;
                        font-weight: 600;
                        cursor: pointer;
                        transition: all 0.2s;
                    ">
                        <i class="bi bi-x-circle"></i> ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏Ç‡∏≠
                    </button>
                </div>
            </div>
        `;

        document.body.appendChild(modal);
    }

    // Animation keyframes
    const style = document.createElement('style');
    style.textContent = `
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        @keyframes slideUp {
            from { transform: translateY(20px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }
    `;
    document.head.appendChild(style);
</script>
